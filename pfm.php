<?php
namespace {
//Configuration Options

//Global chroot path - no user will have access outside this chroot
define('GLOBAL_CHROOT_PATH', '/var/www_test/pfm/files');

//This path is prepended to the links in pfm
define('BASE_URL_PATH', 'files');

//PHP Session Name
define('SESSION_NAME', 'pfm');

//Authentication Options
//Precedence: ACL_FILE, ACL, PASSWORD
//See README.md for details

define('ACL_FILE','/var/www_config/userfile.json');
define('ACL','');
define('PASSWORD','');

/*************************************
*
* DO NOT EDIT ANYTHING BELOW THIS LINE
*
**************************************/
if (defined('ACL_FILE') && !empty(ACL_FILE)) {
	define('AUTH_METHOD', file_get_contents(ACL_FILE));
}
else if (defined('ACL') && !empty(ACL)) {
	define('AUTH_METHOD', ACL);
}
else if (defined('PASSWORD') && !empty(PASSWORD)) {
	define('AUTH_METHOD', PASSWORD);
}
else {
	throw new InvalidArgumentException('No authentication method specified!');
}

//User setup
define('CHROOT_PATH', GLOBAL_CHROOT_PATH);

}
//Includes
namespace secure_login_session { define("PBKDF2_HASH_ALGORITHM", "sha256"); define("PBKDF2_ITERATIONS", 1000); define("PBKDF2_SALT_BYTE_SIZE", 24); define("PBKDF2_HASH_BYTE_SIZE", 24); define("HASH_SECTIONS", 4); define("HASH_ALGORITHM_INDEX", 0); define("HASH_ITERATION_INDEX", 1); define("HASH_SALT_INDEX", 2); define("HASH_PBKDF2_INDEX", 3); define("FAILED_ATTEMPTS", 5); define("DISABLE_IP_CHECK", false); class secure_login_session { function __construct($session_name, $users) { if (session_status() == PHP_SESSION_ACTIVE) { throw new Exception("Session already active"); } $this->users = json_decode($users, true); $session_hash = 'sha256'; if (in_array($session_hash, hash_algos())) ini_set('session.hash_function', $session_hash); ini_set('session.hash_bits_per_character', 6); ini_set('session.use_only_cookies', 1); $cookieParams = session_get_cookie_params(); $secure = true; $httponly = true; session_set_cookie_params($cookieParams["lifetime"], $cookieParams["path"], $cookieParams["domain"], $secure, $httponly); session_name($session_name); $this->session_start(); $this->session_regenerate_id(); } private function session_start() { session_start(); if (isset($_SESSION['EXPIRED'])) { if ($_SESSION['EXPIRED'] < time()-120) { $this->logout(); throw new Exception("Session expired"); } if (isset($_SESSION['NEW_ID'])) { session_commit(); session_id($_SESSION['NEW_ID']); session_start(); } } } private function session_regenerate_id() { $id = session_create_id(); $_SESSION['NEW_ID'] = $id; $_SESSION['EXPIRED'] = time(); $session = $_SESSION; session_commit(); session_id($id); session_start(); $_SESSION = $session; unset($_SESSION['EXPIRED']); unset($_SESSION['NEW_ID']); } public function login($user, $password) { if ($this->users !== NULL && array_key_exists($user, $this->users)) { if ($this->validate_password($password, $this->users[$user]["login_hash"])) { $_SESSION["user"] = $user; $session_hash = $this->users[$user]["login_hash"] . $_SERVER["HTTP_USER_AGENT"]; if (!DISABLE_IP_CHECK) $session_hash .= $_SERVER["REMOTE_ADDR"]; $_SESSION["hash"] = $this->create_hash($session_hash); $this->users[$user]["brute_force"] = 0; return true; } else { $this->users[$user]["brute_force"]++; if ($this->users[$user]["brute_force"] >= FAILED_ATTEMPTS) { $this->users[$user . "||LOCKED"] = $this->users[$user]; unset($this->users[$user]); } return false; } } else return false; } public function logout() { $_SESSION = array(); if (ini_get("session.use_cookies") || ini_get("session.use_only_cookies")) { $params = session_get_cookie_params(); setcookie(session_name(), '', time() - 42000, $params["path"], $params["domain"], $params["secure"], $params["httponly"] ); } session_destroy(); } public function is_valid() { if (!isset($_SESSION["user"]) || !isset($_SESSION["hash"]) ) return false; if ($this->users !== NULL && array_key_exists($_SESSION["user"], $this->users)) { $session_hash = $this->users[$_SESSION["user"]]["login_hash"] . $_SERVER["HTTP_USER_AGENT"]; if (!DISABLE_IP_CHECK) $session_hash .= $_SERVER["REMOTE_ADDR"]; if ($this->validate_password($session_hash, $_SESSION["hash"] ) ) return true; else return false; } else return false; } public function add_user($user, $password) { if ($this->users !== NULL && !array_key_exists($user, $this->users)) { $this->users[$user] = array("login_hash" => $this->create_hash($password), "brute_force" => 0); return true; } else return false; } public function dump_user_file($file) { if (file_put_contents($file, json_encode($this->users))) return true; else return false; } private function create_hash($password) { $salt = base64_encode(random_bytes(PBKDF2_SALT_BYTE_SIZE)); return PBKDF2_HASH_ALGORITHM . ":" . PBKDF2_ITERATIONS . ":" . $salt . ":" . base64_encode($this->pbkdf2( PBKDF2_HASH_ALGORITHM, $password, $salt, PBKDF2_ITERATIONS, PBKDF2_HASH_BYTE_SIZE, true )); } private function validate_password($password, $correct_hash) { $params = explode(":", $correct_hash); if(count($params) < HASH_SECTIONS) return false; $pbkdf2 = base64_decode($params[HASH_PBKDF2_INDEX]); return $this->slow_equals( $pbkdf2, $this->pbkdf2( $params[HASH_ALGORITHM_INDEX], $password, $params[HASH_SALT_INDEX], (int)$params[HASH_ITERATION_INDEX], strlen($pbkdf2), true ) ); } private function slow_equals($a, $b) { $diff = strlen($a) ^ strlen($b); for($i = 0; $i < strlen($a) && $i < strlen($b); $i++) { $diff |= ord($a[$i]) ^ ord($b[$i]); } return $diff === 0; } private function pbkdf2($algorithm, $password, $salt, $count, $key_length, $raw_output = false) { $algorithm = strtolower($algorithm); if(!in_array($algorithm, hash_algos(), true)) trigger_error('PBKDF2 ERROR: Invalid hash algorithm.', E_USER_ERROR); if($count <= 0 || $key_length <= 0) trigger_error('PBKDF2 ERROR: Invalid parameters.', E_USER_ERROR); if (function_exists("hash_pbkdf2")) { if (!$raw_output) { $key_length = $key_length * 2; } return hash_pbkdf2($algorithm, $password, $salt, $count, $key_length, $raw_output); } $hash_length = strlen(hash($algorithm, "", true)); $block_count = ceil($key_length / $hash_length); $output = ""; for($i = 1; $i <= $block_count; $i++) { $last = $salt . pack("N", $i); $last = $xorsum = hash_hmac($algorithm, $last, $password, true); for ($j = 1; $j < $count; $j++) { $xorsum ^= ($last = hash_hmac($algorithm, $last, $password, true)); } $output .= $xorsum; } if($raw_output) return substr($output, 0, $key_length); else return bin2hex(substr($output, 0, $key_length)); } }}
namespace { use dir\dir; function load_dir(array $input_checks) { if (!is_logged_in()->success) throw new Exception("Not logged in"); if (!isset($_REQUEST["path"])) throw new Exception("Path not specified"); foreach ($input_checks as $input => $error) { if (!isset($_REQUEST[$input])) throw new Exception($error); } $dir = new dir($_REQUEST["path"], CHROOT_PATH); if ($dir->has_errors()) throw new Exception(join("\n", $dir->get_errors())); return $dir; } } 
namespace dir { define("DIRSEP", DIRECTORY_SEPARATOR); class dir { public $invalid_chars = ""; private $full_path, $chroot_path; private $subdirs, $files, $errors = array(); public function __construct($path, $chroot_path) { $this->chroot_path = realpath($chroot_path); if ($this->chroot_path === false) { $this->error("Invalid chroot path"); return; } $this->full_path = $this->sanitize_path($path); if ($this->full_path === false || !is_dir($this->full_path)) { $this->full_path = $this->chroot_path; $this->error("Invalid directory path: \"$path\""); } if (strtolower(substr(php_uname("s"), 0, 3)) == "win") $this->invalid_chars = array('\\','/', '*', '?', '"', '<', '>', '|', ':'); else $this->invalid_chars = array('/', '\0'); $this->refresh(); } private function sanitize_path($path) { if ($path == "") $path = DIRSEP; if (substr($path, 0, 1) == DIRSEP) { $realpath = realpath($this->chroot_path . $path); if ($realpath !== false && substr($realpath, 0, strlen($this->chroot_path)) == $this->chroot_path) return $realpath; else return false; } else if ($this->full_path) { $realpath = realpath($this->full_path . DIRSEP . $path); if ($realpath !== false && substr($realpath, 0, strlen($this->chroot_path)) == $this->chroot_path) return $realpath; else return false; } return false; } private function is_valid_filename($file) { foreach ($this->invalid_chars as $invalid_char) { if (strpos($file, $invalid_char) !== false) { return false; } } return true; } private function error($message) { $this->errors[] = $message; } private function is_file($file_name) { foreach ($this->files as $file) if ($file_name == $file->name) return true; return false; } private function is_subdir($subdir) { return in_array($subdir, $this->subdirs); } public function get_file($file_name) { foreach ($this->files as $file) if ($file_name == $file->name) return $file; return false; } public function refresh() { if (@$contents = scandir($this->full_path)) { $this->files = array(); $this->subdirs = array(); foreach ($contents as $dir_file) { switch (filetype($this->full_path . DIRSEP . $dir_file)) { case "dir": if ($dir_file != ".." && $dir_file != ".") $this->subdirs[] = $dir_file; break; case "file": $this->files[] = new file($dir_file, $this->full_path); break; case "link": if ($this->sanitize_path($dir_file)) $this->files[] = new file($dir_file, $this->full_path); default: break; } } return true; } else { $this->error('Could not get contents of "' . $this->get_chrooted_path() . '"'); return false; } } public function get_chrooted_path() { $path = substr($this->full_path, strlen($this->chroot_path)); return $path == "" ? DIRSEP : $path; } public function get_subdirs() { return $this->subdirs; } public function get_files() { return $this->files; } public function get_file_names() { return array_map(function($file) { return $file->name; }, $this->files); } public function sort_files($by) { if (count($this->files) > 0) { switch ($by) { case "name": default: usort($this->files, function($a, $b) { return strcmp($a->name, $b->name); }); break; case "dname": usort($this->files, function($a, $b) { return strcmp($b->name, $a->name); }); break; case "size": usort($this->files, function($a, $b) { return $a->size - $b->size; }); break; case "dsize": usort($this->files, function($a, $b) { return $b->size - $a->size; }); break; case "created": usort($this->files, function($a, $b) { return $a->created - $b->created; }); break; case "dcreated": usort($this->files, function($a, $b) { return $b->created - $a->created; }); break; case "modified": usort($this->files, function($a, $b) { return $a->modified - $b->modified; }); break; case "dmodified": usort($this->files, function($a, $b) { return $b->modified - $a->modified; }); break; } } return $this->files; } public function rename($from, $to) { if (!$this->is_file($from) && !$this->is_subdir($from)) { $this->error("Could not find \"$from\""); return false; } if ($this->is_file($to) || $this->is_subdir($to)) { $this->error("\"$to\" already exists"); return false; } if (!$this->is_valid_filename($to)) { $this->error("Invalid target for rename: \"$to\""); return false; } if (@rename($this->full_path . DIRSEP . $from, $this->full_path . DIRSEP . $to)) { $this->refresh(); return true; } else { $this->error("Could not rename \"$from\" to \"$to\""); return false; } } public function regex_rename($pattern, $replace) { if ($pattern == "") { $this->error("Pattern not specified"); return false; } if (@preg_match($pattern, "") === false) { $this->error("Invalid pattern"); return false; } $no_errors = true; foreach ($this->files as $file) { if (preg_match($pattern, $file->name)) { if (!$this->rename($file->name, preg_replace($pattern, $replace, $file->name))) { $no_errors = false; } } } if (!$no_errors) $this->error("Could not rename all files. Partial rename may have occurred"); $this->refresh(); return $no_errors; } public function regex_rename_test($pattern, $replace) { if ($pattern == "") { $this->error("Pattern not specified"); return false; } if (@preg_match($pattern, "") === false) { $this->error("Invalid pattern"); return false; } $renames = array(); foreach ($this->files as $file) { if (preg_match($pattern, $file->name)) { $renames[] = (object) ["from" => $file->name, "to" => preg_replace($pattern, $replace, $file->name)]; } } return $renames; } public function delete($files) { if (is_string($files)) $files = array($files); if (!is_array($files) || count($files) < 1) return false; $no_errors = true; foreach($files as $file) { if (!$this->is_file($file)) { $this->error("Could not find \"$file\""); $no_errors = false; } else if (@!unlink($this->full_path . DIRSEP . $file)) { $this->error("Could not delete \"$file\""); $no_errors = false; } } $this->refresh(); return $no_errors; } public function put_contents($file, $contents) { if (!$this->is_file($file)) { $this->error("Could not find \"$file\""); return false; } $filepath = $this->full_path . DIRSEP . $file; if (!is_writable($filepath)) { $this->error("\"$file\" is not writable"); return false; } if (@file_put_contents($filepath, $contents)) { clearstatcache(true, $filepath); $this->get_file($file)->size = filesize($filepath); return true; } else { $this->error("Could not write to \"$file\""); return false; } } public function get_contents($file) { if (!$this->is_file($file)) { $this->error("Could not find \"$file\""); return false; } $filepath = $this->full_path . DIRSEP . $file; if (!is_readable($filepath)) { $this->error("\"$file\" is not readable"); return false; } @$contents = file_get_contents($filepath); if ($contents === false) { $this->error("Could not open \"$file\""); return false; } else { return $contents; } } public function readfile($file) { if (!$this->is_file($file)) { $this->error("Could not find \"$file\""); return false; } $filepath = $this->full_path . DIRSEP . $file; if (!is_readable($filepath)) { $this->error("\"$file\" is not readable"); return false; } if (@readfile($filepath) === false) { $this->error("Could not open \"$file\""); return false; } return true; } public function new_file($file) { if ($this->is_file($file)) { $this->error("\"$file\" already exists"); return false; } if (!$this->is_valid_filename($file)) { $this->error("Invalid file name: \"$file\""); return false; } if (@!touch($this->full_path . DIRSEP . $file)) { $this->error("Could not create \"$file\""); return false; } $this->refresh(); return true; } public function zip($dirs_files, $output) { if (!is_array($dirs_files)) $dirs_files = array($dirs_files); if (!is_writable($output)) { $this->error("Could not create zip file"); return false; } $zip = new \ZipArchive(); if ($zip->open($output, \ZipArchive::OVERWRITE) === false) { $this->error("Could not create zip file"); return false; } if ($this->_addToZip($dirs_files, $zip, "") === false) $this->error("Could not add all files to zip archive"); if ($zip->count() < 1) { $zip->close(); @unlink($output); $this->error("Resulting zip file was empty"); return false; } $zip->close(); return true; } public function _addToZip($dirs_files, $zip, $path) { $no_errors = true; if (count($dirs_files) == 0) { $dirs_files = array_merge($this->get_subdirs(), $this->get_file_names()); } foreach ($dirs_files as $dir_file) { $fullpath = $this->full_path . DIRSEP . $dir_file; if ($this->is_file($dir_file) && is_readable($fullpath)) { if ($path == "") $zipfilepath = $dir_file; else $zipfilepath = $path . "/" . $dir_file; $zip->addFile($fullpath, $zipfilepath); } else if ($this->is_subdir($dir_file)) { $dir = new dir($this->get_chrooted_path() . DIRSEP . $dir_file, $this->chroot_path); if ($dir->has_errors()) { $this->error("Could not open path $path" . DIRSEP . $dir_file . " to add to zip file"); $no_errors = false; } else { if ($path == "") $zipfilepath = $dir_file; else $zipfilepath = $path . "/" . $dir_file; if ($dir->_addToZip(array(), $zip, $zipfilepath) === false) { $this->error(join("\n", $dir->get_errors())); $no_errors = false; } } } else { $this->error("Could not add $path" . DIRSEP . $dir_file . " to zip file"); $no_errors = false; } } return $no_errors; } public function get_upload_max_filecount() { return ini_get("max_file_uploads"); } public function get_upload_max_filesize() { $ini_size = ini_get("upload_max_filesize"); if (stristr($ini_size, "k")) $upload_bytes = intVal($ini_size) * 1024; else if (stristr($ini_size, "m")) $upload_bytes = intVal($ini_size) * 1024 * 1024; else if (stristr($ini_size, "g")) $upload_bytes = intVal($ini_size) * 1024 * 1024 * 1024; $ini_size = ini_get("post_max_size"); if (stristr($ini_size, "k")) $post_bytes = intVal($ini_size) * 1024; else if (stristr($ini_size, "m")) $post_bytes = intVal($ini_size) * 1024 * 1024; else if (stristr($ini_size, "g")) $post_bytes = intVal($ini_size) * 1024 * 1024 * 1024; return min($upload_bytes, $post_bytes); } public function upload($file) { if (is_array($file["name"])) { $no_errors = true; for ($i = 0; $i < count($file["name"]); $i++) { if ($file["error"][$i] == UPLOAD_ERR_OK && is_uploaded_file($file["tmp_name"][$i])) { if ($this->is_file($file["name"][$i])) { $this->error("File " . $file["name"][$i] . " already exists"); $no_errors = false; } else if (!$this->is_valid_filename($file["name"][$i])) { $this->error("Filename " . $file["name"][$i] . " is invalid"); $no_errors = false; } else if (@move_uploaded_file($file["tmp_name"][$i], $this->full_path . DIRSEP . $file["name"][$i]) === false) { $this->error("Could not move uploaded file " . $file["name"][$i]); $no_errors = false; } } else { $this->error("Upload of file " . $file["name"][$i] . " failed"); $no_errors = false; } } $this->refresh(); return $no_errors; } else { if ($file["error"] == UPLOAD_ERR_OK) { if ($this->is_file($file["name"])) { $this->error("File " . $file["name"] . " already exists"); return false; } else if (!$this->is_valid_filename($file["name"])) { $this->error("Filename " . $file["name"] . " is invalid"); return false; } else if (@move_uploaded_file($file["tmp_name"], $this->full_path . DIRSEP . $file["name"] === false) ) { $this->error("Could not move uploaded file " . $file["name"]); return false; } else { $this->refresh(); return true; } } else { $this->error("Upload of file " . $file["name"] . " failed"); return false; } } } public function make_dir($subdir) { if (!$this->is_valid_filename($subdir)) { $this->error("Invalid directory name: \"$subdir\""); return false; } if (@mkdir($this->full_path . DIRSEP . $subdir, 0775, true)) { $this->refresh(); return true; } else { $this->error("Could not create directory \"$subdir\""); return false; } } public function remove_dirs($subdirs) { if (is_string($subdirs)) $subdirs = array($subdirs); if (!is_array($subdirs) || count($subdirs) < 1) return false; $errFlag = false; foreach ($subdirs as $subdir) { if (!in_array($subdir, $this->subdirs)) { $this->error("Could not find \"$subdir\""); $errFlag = true; continue; } if (@rmdir($this->full_path . DIRSEP . $subdir)) { continue; } else { $this->error("Could not remove \"$subdir\" (directories must be empty for removal)"); $errFlag = true; } } $this->refresh(); return !$errFlag; } public function copy($dirs_files, $to) { if (is_string($dirs_files)) $dirs_files = array($dirs_files); if (!is_array($dirs_files) || count($dirs_files) < 1) return false; $to_path = $this->sanitize_path($to); if ($to_path === false) { $this->error("Invalid destination path: \"$to\""); return false; } $no_errors = true; foreach ($dirs_files as $dir_file) { if ($this->is_file($dir_file)) { if(@!copy($this->full_path . DIRSEP . $dir_file, $to_path . DIRSEP . $dir_file)) { $this->error("Could not move \"$dir_file\" to \"$to\""); $no_errors = true; } } else if ($this->is_subdir($dir_file)) { $from_dir = new dir($this->get_chrooted_path() . DIRSEP . $dir_file, $this->chroot_path); if ($from_dir->has_errors()) { $this->error("Invalid path. Partial copy may have occurred"); $no_errors = false; continue; } $to_dir = new dir($to, $this->chroot_path); if ($to_dir->has_errors()) { $this->error("Invalid path. Partial copy may have occurred"); $no_errors = false; continue; } if (!$to_dir->make_dir($dir_file)) { $this->error("Could not copy \"" . $this->get_chrooted_path() . DIRSEP . "$dir_file\" to " . $to_dir->get_chrooted_path()); $no_errors = false; continue; } $from_dir->copy($from_dir->get_file_names(), $to . DIRSEP . $dir_file); $from_dir->copy($from_dir->get_subdirs(), $to . DIRSEP . $dir_file); } else { $this->error("Could not find \"$dir_file\""); $no_errors = false; continue; } } $this->refresh(); return $no_errors; } public function duplicate($from, $to) { if (!$this->is_file($from)) { $this->error("Could not find \"$from\""); return false; } if ($this->is_file($to)) { $this->error("\"$to\" already exists"); return false; } if (!$this->is_valid_filename($to)) { $this->error("Invalid target for duplication: \"$to\""); return false; } if (copy($this->full_path . DIRSEP . $from, $this->full_path . DIRSEP . $to)) { $this->refresh(); return true; } else { $this->error("Could not duplicate \"$from\""); return false; } } public function move($dirs_files, $to_dir) { if (is_string($dirs_files)) $dirs_files = array($dirs_files); if (!is_array($dirs_files) || count($dirs_files) < 1) return false; $to = $this->sanitize_path($to_dir); if ($to === false) { $this->error("Invalid destination path"); return false; } $no_errors = true; foreach ($dirs_files as $dir_file) { if (!$this->is_subdir($dir_file) && !$this->is_file($dir_file)) { $this->error("Could not find \"$dir_file\""); $no_errors = false; continue; } else if (is_file($to . DIRSEP . $dir_file) || is_dir($to . DIRSEP . $dir_file)) { $this->error("Could not move \"$dir_file\" to \"$to_dir\" (already exists)"); $no_errors = false; continue; } else if (@!rename($this->full_path . DIRSEP . $dir_file, $to . DIRSEP . $dir_file)) { $this->error("Could not move \"$dir_file\" to \"$to_dir\""); $no_errors = true; } } $this->refresh(); return $no_errors; } public function kill_dirs($subdirs) { if (is_string($subdirs)) $subdirs = array($subdirs); if (!is_array($subdirs) || count($subdirs) < 1) { $this->error("Subdirectories not properly specified"); return false; } $errFlag = false; foreach ($subdirs as $subdir) { if(!$this->kill($subdir)) $errFlag = true; } return !$errFlag; } private function kill($subdir) { if (!in_array($subdir, $this->subdirs)) { $this->error("Subdirectory \"$subdir\" does not exist"); return false; } $dir = new dir($this->get_chrooted_path() . DIRSEP . $subdir, $this->chroot_path); if ($dir->has_errors()) { $this->error("Invalid path. Partial kill may have occurred"); return false; } foreach ($dir->get_file_names() as $file_name) { if (!$dir->delete($file_name)) { $this->error("Could not delete \"" . $dir->get_chrooted_path() . DIRSEP . $file_name . "\". Partial kill may have occurred"); return false; } } foreach ($dir->subdirs as $subdir_name) { if (!$dir->kill($subdir_name)) { foreach ($dir->get_errors() as $error) $this->error($error); $this->error("Could not kill \"" . $dir->get_chrooted_path() . DIRSEP . $subdir . "\". Partial kill may have occurred"); return false; } } if (!$this->remove_dirs($subdir)) { $this->error("Could not remove directory \"$subdir\". Partial kill may have occurred"); return false; } return true; } public function search($query, $depth, $regex) { $results = array(); $path = $this->get_chrooted_path(); if ($path != "/") $path .= DIRSEP; $file_names = $this->get_file_names(); if ($regex) { if (@preg_match($query, "") === false) { $this->error("Invalid pattern"); return false; } foreach ($file_names as $name) { if (preg_match($query, $name)) $results[] = $path . $name; } foreach ($this->subdirs as $name) { if (preg_match($query, $name)) $results[] = $path . $name; if ($depth > 0) { $dir = new dir($path . $name, $this->chroot_path); if ($dir->has_errors()) { $this->error("Invalid path while searching"); return false; } $results = array_merge($results, $dir->search($query, $depth - 1, $regex)); } } } else { foreach ($file_names as $name) { if (stristr($name, $query)) $results[] = $path . $name; } foreach ($this->subdirs as $name) { if (stristr($name, $query)) $results[] = $path . $name; if ($depth > 0) { $dir = new dir($path . $name, $this->chroot_path); if ($dir->has_errors()) { $this->error("Invalid path while searching"); return false; } $results = array_merge($results, $dir->search($query, $depth - 1, $regex)); } } } return $results; } public function size($dir_file) { if ($this->is_file($dir_file)) { return $this->get_file($dir_file)->size; } else if ($this->is_subdir($dir_file)) { $dir = new dir($this->get_chrooted_path() . DIRSEP . $dir_file, $this->chroot_path); if ($dir->has_errors()) { $this->error("Could not get size of $dir_file"); return false; } $size = 0; foreach ($dir->get_files() as $file) { $size += $file->size; } foreach ($dir->get_subdirs() as $subdir) { $dir_size = $dir->size($subdir); if ($dir_size === false) { $this->error("Could not get size of " . $this->get_chrooted_path() . DIRSEP . $dir_file . DIRSEP . $subdir); return false; } else { $size += $dir_size; } } return $size; } else { $this->error("Could not find $dir_file"); return false; } } public function get_errors() { return $this->errors; } public function has_errors() { return count($this->errors) > 0; } } class file { public $name, $size, $owner, $group, $permissions, $created, $modified; public function __construct($basename, $path) { $this->name = $basename; $fullpath = $path . DIRSEP . $basename; $this->size = filesize($fullpath); $this->owner = posix_getpwuid(fileowner($fullpath))["name"]; $this->group = posix_getgrgid(filegroup($fullpath))["name"]; $this->permissions = substr(sprintf('%o', fileperms($fullpath)), -4); $this->modified = filemtime($fullpath); $this->created = filectime($fullpath); } }
}
namespace { use secure_login_session\secure_login_session; global $ajax_page_session; $ajax_page_session = new secure_login_session(SESSION_NAME, AUTH_METHOD);
//Callbacks
function login() { global $ajax_page_session; if (!isset($_REQUEST["username"]) || !isset($_REQUEST["password"])) return (object) ["success" => false, "error" => "Request did not include username and password"]; if ($ajax_page_session->login($_REQUEST["username"], $_REQUEST["password"])) return (object) ["success" => true]; else return (object) ["success" => false, "error" => "Invalid username or password"]; } function logout() { global $ajax_page_session; if ($ajax_page_session) { $ajax_page_session->logout(); return (object) ['success' => true]; } else { return (object) ['success' => false, 'error' => 'Could not find session']; } } function is_logged_in() { global $ajax_page_session; return (object) ['success' => $ajax_page_session && $ajax_page_session->is_valid()]; }
function get_config() { try { $dir = load_dir([]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } return (object) [ "success" => true, "baseURLPath" => BASE_URL_PATH, "separator" => DIRECTORY_SEPARATOR, "invalidChars" => $dir->invalid_chars, "maxUploadSize" => $dir->get_upload_max_filesize(), "maxUploadCount" => $dir->get_upload_max_filecount() ]; } function refresh() { try { $dir = load_dir([]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } function get_subdirs() { try { $dir = load_dir([]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs() ]; } function make_dir() { try { $dir = load_dir(["name" => "Directory name not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->make_dir($_REQUEST["name"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function remove_dirs() { try { $dir = load_dir(["names" => "Directory names not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->remove_dirs($_REQUEST["names"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) [ "success" => false, "error" => join("\n", $dir->get_errors()), "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } } function kill_dirs() { try { $dir = load_dir(["names" => "Directory names not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->kill_dirs($_REQUEST["names"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) [ "success" => false, "error" => join("\n", $dir->get_errors()), "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } } function rename_pfm() { try { $dir = load_dir([ "from" => "Old name not specified", "to" => "New name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->rename($_REQUEST["from"], $_REQUEST["to"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function duplicate() { try { $dir = load_dir([ "from" => "Old name not specified", "to" => "New name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->duplicate($_REQUEST["from"], $_REQUEST["to"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function regex_rename() { try { $dir = load_dir([ "pattern" => "Directory name not specified", "replace" => "New directory name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->regex_rename($_REQUEST["pattern"], $_REQUEST["replace"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) [ "success" => false, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files(), "error" => join("\n", $dir->get_errors()) ]; } } function regex_rename_test() { try { $dir = load_dir([ "pattern" => "Directory name not specified", "replace" => "New directory name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } $renames = $dir->regex_rename_test($_REQUEST["pattern"], $_REQUEST["replace"]); if ($renames === false) return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; else return (object) ["success" => true, "renames" => $renames]; } function delete() { try { $dir = load_dir(["names" => "File names not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->delete($_REQUEST["names"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) [ "success" => false, "error" => join("\n", $dir->get_errors()), "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } } function new_file() { try { $dir = load_dir(["name" => "File name not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->new_file($_REQUEST["name"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function get_contents() { try { $dir = load_dir(["name" => "File name not specified"]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } $contents = $dir->get_contents($_REQUEST["name"]); if ($contents === false) { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } else { return (object) [ "success" => true, "contents" => $contents ]; } } function put_contents() { try { $dir = load_dir([ "name" => "File name not specified", "contents" => "File contents not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->put_contents($_REQUEST["name"], $_REQUEST["contents"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function move() { try { $dir = load_dir([ "names" => "Names not specified", "to" => "New name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->move($_REQUEST["names"], $_REQUEST["to"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function copy_pfm() { try { $dir = load_dir([ "names" => "Names not specified", "to" => "New name not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if ($dir->copy($_REQUEST["names"], $_REQUEST["to"])) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function upload() { try { $dir = load_dir([]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } if (!isset($_FILES["upload"])) return (object) ["success" => false, "error" => "No files submitted"]; if ($dir->upload($_FILES["upload"]) !== false) { return (object) [ "success" => true, "path" => $dir->get_chrooted_path(), "subdirs" => $dir->get_subdirs(), "files" => $dir->get_files() ]; } else { return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; } } function download() { try { $dir = load_dir([]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } header("Content-Type: application/octet-stream"); header("Content-Transfer-Encoding: binary"); header("Accept-Ranges: bytes"); header("Cache-control: must-revalidate"); header("Expires: 0"); header("Pragma: public"); if(!isset($_REQUEST["names"]) || count($_REQUEST["names"]) == 0 || $_REQUEST["names"][0] == "") { $response = "{\"success\": false, \"error\": \"No files or directories specified for download\"}"; header("Content-Length: " . strlen($response)); echo $response; return true; } if (count($_REQUEST["names"]) == 1 && $dir->get_file($_REQUEST["names"][0]) !== false) { header("Content-Disposition: attachment; filename=\"" . $_REQUEST["names"][0] . '"'); header("Content-Length: " . $dir->get_file($_REQUEST["names"][0])->size); if ($dir->readfile($_REQUEST["names"][0]) === false) { echo "{\"success\": false, \"error\": \"Could not read " . $_REQUEST["names"][0] . " - " . addslashes(join("\n", $dir->get_errors())) . "\"}"; } return true; } else { header("Content-Type: application/octet-stream"); header("Content-Transfer-Encoding: binary"); header("Accept-Ranges: bytes"); header("Cache-control: must-revalidate"); header("Expires: 0"); header("Pragma: public"); $file = tempnam(sys_get_temp_dir(), "pfm"); if ($dir->zip($_REQUEST["names"], $file) === false) { $response = "{\"success\": false, \"error\": \"" . join("\n", $dir->get_errors()) . '"}'; header("Content-Length: " . strlen($response)); echo $response; return true; } header("Content-Disposition: attachment; filename=\"files.zip\""); header("Content-Length: " . filesize($file)); @readfile($file); unlink($file); return true; } } function search() { try { $dir = load_dir([ "query" => "Search query not specified", "depth" => "Search depth not specified", "regex" => "Query type not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } $results = $dir->search($_REQUEST["query"], intval($_REQUEST["depth"]), $_REQUEST["regex"] == "true"); if ($results === false) return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; else return (object) ["success" => true, "results" => $results]; } function size() { try { $dir = load_dir([ "name" => "File or directory not specified" ]); } catch (Exception $e) { return (object) ["success" => false, "error" => $e->getMessage()]; } $size = $dir->size($_REQUEST["name"]); if ($size === false) return (object) ["success" => false, "error" => join("\n", $dir->get_errors())]; else return (object) ["success" => true, "size" => $size]; }

//Callback selection
$callbacks_map = array('login' => 'login','logout' => 'logout','is_logged_in' => 'is_logged_in','get_config' => 'get_config','refresh' => 'refresh','get_subdirs' => 'get_subdirs','make_dir' => 'make_dir','remove_dirs' => 'remove_dirs','kill_dirs' => 'kill_dirs','duplicate' => 'duplicate','regex_rename' => 'regex_rename','regex_rename_test' => 'regex_rename_test','delete' => 'delete','new_file' => 'new_file','get_contents' => 'get_contents','put_contents' => 'put_contents','move' => 'move','upload' => 'upload','download' => 'download','search' => 'search','size' => 'size','copy' => 'copy_pfm','rename' => 'rename_pfm'); foreach ($callbacks_map as $request => $callback) { if (isset($_REQUEST[$request]) && is_callable($callback)) { $response_obj = call_user_func($callback); if (is_object($response_obj)) { header('Content-Type: application/json'); echo json_encode($response_obj); die(); } else if ($response_obj === true) { die(); } } }

?>
<!DOCTYPE html><html
lang="en"><head><meta
charset="UTF-8"><meta
name="viewport" content="width=device-width, initial-scale=1"><title>PFM File Manager</title> <script>/*
 Sizzle CSS Selector Engine v2.3.4
 https://sizzlejs.com/

 Copyright JS Foundation and other contributors
 Released under the MIT license
 https://js.foundation/

 Date: 2019-04-08
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(n){var C=0;return function(){return C<n.length?{done:!1,value:n[C++]}:{done:!0}}};$jscomp.arrayIterator=function(n){return{next:$jscomp.arrayIteratorImpl(n)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(n,C,N){n!=Array.prototype&&n!=Object.prototype&&(n[C]=N.value)};$jscomp.getGlobal=function(n){return"undefined"!=typeof window&&window===n?n:"undefined"!=typeof global&&null!=global?global:n};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.SymbolClass=function(n,C){this.$jscomp$symbol$id_=n;$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:C})};$jscomp.SymbolClass.prototype.toString=function(){return this.$jscomp$symbol$id_};$jscomp.Symbol=function(){function n(N){if(this instanceof n)throw new TypeError("Symbol is not a constructor");return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX+(N||"")+"_"+C++,N)}var C=0;return n}();
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var n=$jscomp.global.Symbol.iterator;n||(n=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("Symbol.iterator"));"function"!=typeof Array.prototype[n]&&$jscomp.defineProperty(Array.prototype,n,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var n=$jscomp.global.Symbol.asyncIterator;n||(n=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("Symbol.asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(n){$jscomp.initSymbolIterator();n={next:n};n[$jscomp.global.Symbol.iterator]=function(){return this};return n};
(function(n,C){"object"===typeof module&&"object"===typeof module.exports?module.exports=n.document?C(n,!0):function(n){if(!n.document)throw Error("jQuery requires a window with a document");return C(n)}:C(n)})("undefined"!==typeof window?window:this,function(n,C){function N(a,b,c){c=c||u;var e,d=c.createElement("script");d.text=a;if(b)for(e in Wb)(a=b[e]||b.getAttribute&&b.getAttribute(e))&&d.setAttribute(e,a);c.head.appendChild(d).parentNode.removeChild(d)}function ma(a){return null==a?a+"":"object"===
typeof a||"function"===typeof a?Ba[ib.call(a)]||"object":typeof a}function Ra(a){var b=!!a&&"length"in a&&a.length,c=ma(a);return p(a)||na(a)?!1:"array"===c||0===b||"number"===typeof b&&0<b&&b-1 in a}function R(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()}function Sa(a,b,c){return p(b)?d.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?d.grep(a,function(a){return a===b!==c}):"string"!==typeof b?d.grep(a,function(a){return-1<Ea.call(b,a)!==c}):d.filter(b,a,c)}function jb(a,
b){for(;(a=a[b])&&1!==a.nodeType;);return a}function Xb(a){var b={};d.each(a.match(M)||[],function(a,e){b[e]=!0});return b}function oa(a){return a}function Fa(a){throw a;}function kb(a,b,c,e){var d;try{a&&p(d=a.promise)?d.call(a).done(b).fail(c):a&&p(d=a.then)?d.call(a,b,c):b.apply(void 0,[a].slice(e))}catch(g){c.apply(void 0,[g])}}function Ga(){u.removeEventListener("DOMContentLoaded",Ga);n.removeEventListener("load",Ga);d.ready()}function Yb(a,b){return b.toUpperCase()}function T(a){return a.replace(Zb,
"ms-").replace($b,Yb)}function pa(){this.expando=d.expando+pa.uid++}function lb(a,b,c){if(void 0===c&&1===a.nodeType)if(c="data-"+b.replace(ac,"-$&").toLowerCase(),c=a.getAttribute(c),"string"===typeof c){try{var e=c;c="true"===e?!0:"false"===e?!1:"null"===e?null:e===+e+""?+e:bc.test(e)?JSON.parse(e):e}catch(f){}H.set(a,b,c)}else c=void 0;return c}function mb(a,b,c,e){var f,g=20,h=e?function(){return e.cur()}:function(){return d.css(a,b,"")},k=h(),l=c&&c[3]||(d.cssNumber[b]?"":"px"),m=a.nodeType&&
(d.cssNumber[b]||"px"!==l&&+k)&&qa.exec(d.css(a,b));if(m&&m[3]!==l){k/=2;l=l||m[3];for(m=+k||1;g--;)d.style(a,b,m+l),0>=(1-f)*(1-(f=h()/k||.5))&&(g=0),m/=f;m*=2;d.style(a,b,m+l);c=c||[]}if(c){m=+m||+k||0;var q=c[1]?m+(c[1]+1)*c[2]:+c[2];e&&(e.unit=l,e.start=m,e.end=q)}return q}function Y(a,b){for(var c,e,f=[],g=0,h=a.length;g<h;g++)if(e=a[g],e.style)if(c=e.style.display,b){if("none"===c&&(f[g]=t.get(e,"display")||null,f[g]||(e.style.display="")),""===e.style.display&&Ha(e)){c=g;var k=e.ownerDocument;
e=e.nodeName;var l=nb[e];l||(k=k.body.appendChild(k.createElement(e)),l=d.css(k,"display"),k.parentNode.removeChild(k),"none"===l&&(l="block"),nb[e]=l);k=l;f[c]=k}}else"none"!==c&&(f[g]="none",t.set(e,"display",c));for(g=0;g<h;g++)null!=f[g]&&(a[g].style.display=f[g]);return a}function I(a,b){var c="undefined"!==typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!==typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&R(a,b)?d.merge([a],c):c}function Ta(a,
b){for(var c=0,e=a.length;c<e;c++)t.set(a[c],"globalEval",!b||t.get(b[c],"globalEval"))}function ob(a,b,c,e,f){for(var g,h,k,l=b.createDocumentFragment(),m=[],q=0,r=a.length;q<r;q++)if((g=a[q])||0===g)if("object"===ma(g))d.merge(m,g.nodeType?[g]:g);else if(cc.test(g)){h=h||l.appendChild(b.createElement("div"));k=(pb.exec(g)||["",""])[1].toLowerCase();k=E[k]||E._default;h.innerHTML=k[1]+d.htmlPrefilter(g)+k[2];for(k=k[0];k--;)h=h.lastChild;d.merge(m,h.childNodes);h=l.firstChild;h.textContent=""}else m.push(b.createTextNode(g));
l.textContent="";for(q=0;g=m[q++];)if(e&&-1<d.inArray(g,e))f&&f.push(g);else if(a=ra(g),h=I(l.appendChild(g),"script"),a&&Ta(h),c)for(k=0;g=h[k++];)qb.test(g.type||"")&&c.push(g);return l}function sa(){return!0}function ta(){return!1}function dc(a,b){a:{try{var c=u.activeElement;break a}catch(e){}c=void 0}return a===c===("focus"===b)}function Ua(a,b,c,e,f,g){var h;if("object"===typeof b){"string"!==typeof c&&(e=e||c,c=void 0);for(h in b)Ua(a,h,c,e,b[h],g);return a}null==e&&null==f?(f=c,e=c=void 0):
null==f&&("string"===typeof c?(f=e,e=void 0):(f=e,e=c,c=void 0));if(!1===f)f=ta;else if(!f)return a;if(1===g){var k=f;f=function(a){d().off(a);return k.apply(this,arguments)};f.guid=k.guid||(k.guid=d.guid++)}return a.each(function(){d.event.add(this,b,f,e,c)})}function Ia(a,b,c){c?(t.set(a,b,!1),d.event.add(a,b,{namespace:!1,handler:function(a){var e=t.get(this,b);if(a.isTrigger&1&&this[b])if(e.length)(d.event.special[b]||{}).delegateType&&a.stopPropagation();else{e=Z.call(arguments);t.set(this,b,
e);var g=c(this,b);this[b]();var h=t.get(this,b);e!==h||g?t.set(this,b,!1):h={};if(e!==h)return a.stopImmediatePropagation(),a.preventDefault(),h.value}else e.length&&(t.set(this,b,{value:d.event.trigger(d.extend(e[0],d.Event.prototype),e.slice(1),this)}),a.stopImmediatePropagation())}})):void 0===t.get(a,b)&&d.event.add(a,b,sa)}function rb(a,b){return R(a,"table")&&R(11!==b.nodeType?b:b.firstChild,"tr")?d(a).children("tbody")[0]||a:a}function ec(a){a.type=(null!==a.getAttribute("type"))+"/"+a.type;
return a}function fc(a){"true/"===(a.type||"").slice(0,5)?a.type=a.type.slice(5):a.removeAttribute("type");return a}function sb(a,b){var c;if(1===b.nodeType){if(t.hasData(a)){var e=t.access(a);var f=t.set(b,e);if(e=e.events)for(g in delete f.handle,f.events={},e)for(f=0,c=e[g].length;f<c;f++)d.event.add(b,g,e[g][f])}if(H.hasData(a)){var g=H.access(a);g=d.extend({},g);H.set(b,g)}}}function U(a,b,c,e){b=tb.apply([],b);var f,g=0,h=a.length,k=h-1,l=b[0],m=p(l);if(m||1<h&&"string"===typeof l&&!v.checkClone&&
gc.test(l))return a.each(function(d){var f=a.eq(d);m&&(b[0]=l.call(this,d,f.html()));U(f,b,c,e)});if(h){var q=ob(b,a[0].ownerDocument,!1,a,e);var r=q.firstChild;1===q.childNodes.length&&(q=r);if(r||e){r=d.map(I(q,"script"),ec);for(f=r.length;g<h;g++){var n=q;g!==k&&(n=d.clone(n,!0,!0),f&&d.merge(r,I(n,"script")));c.call(a[g],n,g)}if(f)for(q=r[r.length-1].ownerDocument,d.map(r,fc),g=0;g<f;g++)n=r[g],qb.test(n.type||"")&&!t.access(n,"globalEval")&&d.contains(q,n)&&(n.src&&"module"!==(n.type||"").toLowerCase()?
d._evalUrl&&!n.noModule&&d._evalUrl(n.src,{nonce:n.nonce||n.getAttribute("nonce")}):N(n.textContent.replace(ic,""),n,q))}}return a}function ub(a,b,c){for(var e=b?d.filter(b,a):a,f=0;null!=(b=e[f]);f++)c||1!==b.nodeType||d.cleanData(I(b)),b.parentNode&&(c&&ra(b)&&Ta(I(b,"script")),b.parentNode.removeChild(b));return a}function ua(a,b,c){var e=a.style;if(c=c||Ka(a)){var f=c.getPropertyValue(b)||c[b];""!==f||ra(a)||(f=d.style(a,b));if(!v.pixelBoxStyles()&&Va.test(f)&&jc.test(b)){a=e.width;b=e.minWidth;
var g=e.maxWidth;e.minWidth=e.maxWidth=e.width=f;f=c.width;e.width=a;e.minWidth=b;e.maxWidth=g}}return void 0!==f?f+"":f}function vb(a,b){return{get:function(){if(a())delete this.get;else return(this.get=b).apply(this,arguments)}}}function Wa(a){var b=d.cssProps[a]||wb[a];if(b)return b;if(a in xb)return a;a:{b=a;for(var c=b[0].toUpperCase()+b.slice(1),e=yb.length;e--;)if(b=yb[e]+c,b in xb)break a;b=void 0}return wb[a]=b||a}function zb(a,b,c){return(a=qa.exec(b))?Math.max(0,a[2]-(c||0))+(a[3]||"px"):
b}function Xa(a,b,c,e,f,g){var h="width"===b?1:0,k=0,l=0;if(c===(e?"border":"content"))return 0;for(;4>h;h+=2)"margin"===c&&(l+=d.css(a,c+aa[h],!0,f)),e?("content"===c&&(l-=d.css(a,"padding"+aa[h],!0,f)),"margin"!==c&&(l-=d.css(a,"border"+aa[h]+"Width",!0,f))):(l+=d.css(a,"padding"+aa[h],!0,f),"padding"!==c?l+=d.css(a,"border"+aa[h]+"Width",!0,f):k+=d.css(a,"border"+aa[h]+"Width",!0,f));!e&&0<=g&&(l+=Math.max(0,Math.ceil(a["offset"+b[0].toUpperCase()+b.slice(1)]-g-l-k-.5))||0);return l}function Ab(a,
b,c){var e=Ka(a),f=(!v.boxSizingReliable()||c)&&"border-box"===d.css(a,"boxSizing",!1,e),g=f,h=ua(a,b,e),k="offset"+b[0].toUpperCase()+b.slice(1);if(Va.test(h)){if(!c)return h;h="auto"}(!v.boxSizingReliable()&&f||"auto"===h||!parseFloat(h)&&"inline"===d.css(a,"display",!1,e))&&a.getClientRects().length&&(f="border-box"===d.css(a,"boxSizing",!1,e),(g=k in a)&&(h=a[k]));h=parseFloat(h)||0;return h+Xa(a,b,c||(f?"border":"content"),g,e,h)+"px"}function A(a,b,c,e,d){return new A.prototype.init(a,b,c,e,
d)}function Ya(){La&&(!1===u.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(Ya):n.setTimeout(Ya,d.fx.interval),d.fx.tick())}function Bb(){n.setTimeout(function(){va=void 0});return va=Date.now()}function Ma(a,b){var c=0,e={height:a};for(b=b?1:0;4>c;c+=2-b){var d=aa[c];e["margin"+d]=e["padding"+d]=a}b&&(e.opacity=e.width=a);return e}function Cb(a,b,c){for(var e,d=(S.tweeners[b]||[]).concat(S.tweeners["*"]),g=0,h=d.length;g<h;g++)if(e=d[g].call(c,b,a))return e}function kc(a,b){var c,e;for(c in a){var f=
T(c);var g=b[f];var h=a[c];Array.isArray(h)&&(g=h[1],h=a[c]=h[0]);c!==f&&(a[f]=h,delete a[c]);if((e=d.cssHooks[f])&&"expand"in e)for(c in h=e.expand(h),delete a[f],h)c in a||(a[c]=h[c],b[c]=g);else b[f]=g}}function S(a,b,c){var e,f=0,g=S.prefilters.length,h=d.Deferred().always(function(){delete k.elem}),k=function(){if(e)return!1;var b=va||Bb();b=Math.max(0,l.startTime+l.duration-b);for(var c=1-(b/l.duration||0),d=0,f=l.tweens.length;d<f;d++)l.tweens[d].run(c);h.notifyWith(a,[l,c,b]);if(1>c&&f)return b;
f||h.notifyWith(a,[l,1,0]);h.resolveWith(a,[l]);return!1},l=h.promise({elem:a,props:d.extend({},b),opts:d.extend(!0,{specialEasing:{},easing:d.easing._default},c),originalProperties:b,originalOptions:c,startTime:va||Bb(),duration:c.duration,tweens:[],createTween:function(b,c){var e=d.Tween(a,l.opts,b,c,l.opts.specialEasing[b]||l.opts.easing);l.tweens.push(e);return e},stop:function(b){var c=0,d=b?l.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)l.tweens[c].run(1);b?(h.notifyWith(a,[l,1,0]),h.resolveWith(a,
[l,b])):h.rejectWith(a,[l,b]);return this}});c=l.props;for(kc(c,l.opts.specialEasing);f<g;f++)if(b=S.prefilters[f].call(l,a,c,l.opts))return p(b.stop)&&(d._queueHooks(l.elem,l.opts.queue).stop=b.stop.bind(b)),b;d.map(c,Cb,l);p(l.opts.start)&&l.opts.start.call(a,l);l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always);d.fx.timer(d.extend(k,{elem:a,anim:l,queue:l.opts.queue}));return l}function ea(a){return(a.match(M)||[]).join(" ")}function V(a){return a.getAttribute&&
a.getAttribute("class")||""}function Za(a){return Array.isArray(a)?a:"string"===typeof a?a.match(M)||[]:[]}function $a(a,b,c,e){var f;if(Array.isArray(b))d.each(b,function(b,d){c||lc.test(a)?e(a,d):$a(a+"["+("object"===typeof d&&null!=d?b:"")+"]",d,c,e)});else if(c||"object"!==ma(b))e(a,b);else for(f in b)$a(a+"["+f+"]",b[f],c,e)}function Db(a){return function(b,c){"string"!==typeof b&&(c=b,b="*");var e,d=0,g=b.toLowerCase().match(M)||[];if(p(c))for(;e=g[d++];)"+"===e[0]?(e=e.slice(1)||"*",(a[e]=
a[e]||[]).unshift(c)):(a[e]=a[e]||[]).push(c)}}function Eb(a,b,c,e){function f(k){var l;g[k]=!0;d.each(a[k]||[],function(a,d){var k=d(b,c,e);if("string"===typeof k&&!h&&!g[k])return b.dataTypes.unshift(k),f(k),!1;if(h)return!(l=k)});return l}var g={},h=a===ab;return f(b.dataTypes[0])||!g["*"]&&f("*")}function bb(a,b){var c,e,f=d.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((f[c]?a:e||(e={}))[c]=b[c]);e&&d.extend(!0,a,e);return a}var fa=[],u=n.document,mc=Object.getPrototypeOf,Z=fa.slice,
tb=fa.concat,cb=fa.push,Ea=fa.indexOf,Ba={},ib=Ba.toString,Na=Ba.hasOwnProperty,Fb=Na.toString,nc=Fb.call(Object),v={},p=function(a){return"function"===typeof a&&"number"!==typeof a.nodeType},na=function(a){return null!=a&&a===a.window},Wb={type:!0,src:!0,nonce:!0,noModule:!0},d=function(a,b){return new d.fn.init(a,b)},oc=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;d.fn=d.prototype={jquery:"3.4.1",constructor:d,length:0,toArray:function(){return Z.call(this)},get:function(a){return null==a?Z.call(this):
0>a?this[a+this.length]:this[a]},pushStack:function(a){a=d.merge(this.constructor(),a);a.prevObject=this;return a},each:function(a){return d.each(this,a)},map:function(a){return this.pushStack(d.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(Z.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length;a=+a+(0>a?b:0);return this.pushStack(0<=a&&a<b?[this[a]]:[])},end:function(){return this.prevObject||
this.constructor()},push:cb,sort:fa.sort,splice:fa.splice};d.extend=d.fn.extend=function(){var a,b,c,e=arguments[0]||{},f=1,g=arguments.length,h=!1;"boolean"===typeof e&&(h=e,e=arguments[f]||{},f++);"object"===typeof e||p(e)||(e={});f===g&&(e=this,f--);for(;f<g;f++)if(null!=(a=arguments[f]))for(b in a){var k=a[b];if("__proto__"!==b&&e!==k)if(h&&k&&(d.isPlainObject(k)||(c=Array.isArray(k)))){var l=e[b];l=c&&!Array.isArray(l)?[]:c||d.isPlainObject(l)?l:{};c=!1;e[b]=d.extend(h,l,k)}else void 0!==k&&
(e[b]=k)}return e};d.extend({expando:"jQuery"+("3.4.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw Error(a);},noop:function(){},isPlainObject:function(a){if(!a||"[object Object]"!==ib.call(a))return!1;a=mc(a);if(!a)return!0;a=Na.call(a,"constructor")&&a.constructor;return"function"===typeof a&&Fb.call(a)===nc},isEmptyObject:function(a){for(var b in a)return!1;return!0},globalEval:function(a,b){N(a,{nonce:b&&b.nonce})},each:function(a,b){var c,d=0;if(Ra(a))for(c=a.length;d<
c&&!1!==b.call(a[d],d,a[d]);d++);else for(d in a)if(!1===b.call(a[d],d,a[d]))break;return a},trim:function(a){return null==a?"":(a+"").replace(oc,"")},makeArray:function(a,b){var c=b||[];null!=a&&(Ra(Object(a))?d.merge(c,"string"===typeof a?[a]:a):cb.call(c,a));return c},inArray:function(a,b,c){return null==b?-1:Ea.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,f=a.length;d<c;d++)a[f++]=b[d];a.length=f;return a},grep:function(a,b,c){for(var d=[],f=0,g=a.length,h=!c;f<g;f++)c=!b(a[f],f),
c!==h&&d.push(a[f]);return d},map:function(a,b,c){var d,f=0,g=[];if(Ra(a))for(d=a.length;f<d;f++){var h=b(a[f],f,c);null!=h&&g.push(h)}else for(f in a)h=b(a[f],f,c),null!=h&&g.push(h);return tb.apply([],g)},guid:1,support:v});$jscomp.initSymbol();"function"===typeof Symbol&&($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.initSymbol(),$jscomp.initSymbolIterator(),d.fn[Symbol.iterator]=fa[Symbol.iterator]);d.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
function(a,b){Ba["[object "+b+"]"]=b.toLowerCase()});var ka=function(a){function b(a,b,c,d){var e,f,g,x;var h=b&&b.ownerDocument;var B=b?b.nodeType:9;c=c||[];if("string"!==typeof a||!a||1!==B&&9!==B&&11!==B)return c;if(!d&&((b?b.ownerDocument||b:G)!==w&&xa(b),b=b||w,W)){if(11!==B&&(x=va.exec(a)))if(e=x[1])if(9===B)if(f=b.getElementById(e)){if(f.id===e)return c.push(f),c}else return c;else{if(h&&(f=h.getElementById(e))&&Da(b,f)&&f.id===e)return c.push(f),c}else{if(x[2])return y.apply(c,b.getElementsByTagName(a)),
c;if((e=x[3])&&K.getElementsByClassName&&b.getElementsByClassName)return y.apply(c,b.getElementsByClassName(e)),c}if(!(!K.qsa||E[a+" "]||Q&&Q.test(a)||1===B&&"object"===b.nodeName.toLowerCase())){e=a;h=b;if(1===B&&ma.test(a)){(g=b.getAttribute("id"))?g=g.replace(pa,qa):b.setAttribute("id",g=D);B=da(a);for(h=B.length;h--;)B[h]="#"+g+" "+p(B[h]);e=B.join(",");h=ca.test(a)&&n(b.parentNode)||b}try{return y.apply(c,h.querySelectorAll(e)),c}catch(Uc){E(a,!0)}finally{g===D&&b.removeAttribute("id")}}}return Ba(a.replace(V,
"$1"),b,c,d)}function c(){function a(c,d){b.push(c+" ")>F.cacheLength&&delete a[b.shift()];return a[c+" "]=d}var b=[];return a}function d(a){a[D]=!0;return a}function f(a){var b=w.createElement("fieldset");try{return!!a(b)}catch(B){return!1}finally{b.parentNode&&b.parentNode.removeChild(b)}}function g(a,b){for(var c=a.split("|"),d=c.length;d--;)F.attrHandle[c[d]]=b}function h(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)for(;c=c.nextSibling;)if(c===
b)return-1;return a?1:-1}function k(a){return function(b){return"input"===b.nodeName.toLowerCase()&&b.type===a}}function l(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function m(a){return function(b){return"form"in b?b.parentNode&&!1===b.disabled?"label"in b?"label"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&za(b)===a:b.disabled===a:"label"in b?b.disabled===a:!1}}function q(a){return d(function(b){b=
+b;return d(function(c,d){for(var e,f=a([],c.length,b),g=f.length;g--;)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function n(a){return a&&"undefined"!==typeof a.getElementsByTagName&&a}function t(){}function p(a){for(var b=0,c=a.length,d="";b<c;b++)d+=a[b].value;return d}function Ja(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&"parentNode"===f,h=H++;return b.first?function(b,c,e){for(;b=b[d];)if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,x){var B,k=[ha,h];if(x)for(;b=b[d];){if((1===b.nodeType||g)&&
a(b,c,x))return!0}else for(;b=b[d];)if(1===b.nodeType||g){var l=b[D]||(b[D]={});l=l[b.uniqueID]||(l[b.uniqueID]={});if(e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((B=l[f])&&B[0]===ha&&B[1]===h)return k[2]=B[2];l[f]=k;if(k[2]=a(b,c,x))return!0}}return!1}}function u(a){return 1<a.length?function(b,c,d){for(var e=a.length;e--;)if(!a[e](b,c,d))return!1;return!0}:a[0]}function v(a,b,c,d,e){for(var f,g=[],h=0,x=a.length,B=null!=b;h<x;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),B&&b.push(h);return g}function C(a,
c,e,f,g,h){f&&!f[D]&&(f=C(f));g&&!g[D]&&(g=C(g,h));return d(function(d,h,x,B){var l,k=[],m=[],J=h.length,P;if(!(P=d)){P=c||"*";for(var n=x.nodeType?[x]:x,q=[],Ca=0,db=n.length;Ca<db;Ca++)b(P,n[Ca],q);P=q}P=!a||!d&&c?P:v(P,k,a,x,B);n=e?g||(d?a:J||f)?[]:h:P;e&&e(P,n,x,B);if(f){var r=v(n,m);f(r,[],x,B);for(x=r.length;x--;)if(l=r[x])n[m[x]]=!(P[m[x]]=l)}if(d){if(g||a){if(g){r=[];for(x=n.length;x--;)(l=n[x])&&r.push(P[x]=l);g(null,n=[],r,B)}for(x=n.length;x--;)(l=n[x])&&-1<(r=g?N(d,l):k[x])&&(d[r]=!(h[r]=
l))}}else n=v(n===h?n.splice(J,n.length):n),g?g(null,h,n,B):y.apply(h,n)})}function z(a){var b,c,d=a.length,e=F.relative[a[0].type];var f=e||F.relative[" "];for(var g=e?1:0,h=Ja(function(a){return a===b},f,!0),x=Ja(function(a){return-1<N(b,a)},f,!0),l=[function(a,c,d){a=!e&&(d||c!==Oa)||((b=c).nodeType?h(a,c,d):x(a,c,d));b=null;return a}];g<d;g++)if(f=F.relative[a[g].type])l=[Ja(u(l),f)];else{f=F.filter[a[g].type].apply(null,a[g].matches);if(f[D]){for(c=++g;c<d&&!F.relative[a[c].type];c++);return C(1<
g&&u(l),1<g&&p(a.slice(0,g-1).concat({value:" "===a[g-2].type?"*":""})).replace(V,"$1"),f,g<c&&z(a.slice(g,c)),c<d&&z(a=a.slice(c)),c<d&&p(a))}l.push(f)}return u(l)}function pc(a,c){var e=0<c.length,f=0<a.length,g=function(d,g,h,x,l){var k,B,m=0,J="0",P=d&&[],n=[],q=Oa,r=d||f&&F.find.TAG("*",l),Ca=ha+=null==q?1:Math.random()||.1,db=r.length;for(l&&(Oa=g===w||g||l);J!==db&&null!=(k=r[J]);J++){if(f&&k){var t=0;g||k.ownerDocument===w||(xa(k),h=!W);for(;B=a[t++];)if(B(k,g||w,h)){x.push(k);break}l&&(ha=
Ca)}e&&((k=!B&&k)&&m--,d&&P.push(k))}m+=J;if(e&&J!==m){for(t=0;B=c[t++];)B(P,n,g,h);if(d){if(0<m)for(;J--;)P[J]||n[J]||(n[J]=T.call(x));n=v(n)}y.apply(x,n);l&&!d&&0<n.length&&1<m+c.length&&b.uniqueSort(x)}l&&(ha=Ca,Oa=q);return P};return e?d(g):g}var O,Oa,L,ba,w,X,W,Q,ya,Pa,Da,D="sizzle"+1*new Date,G=a.document,ha=0,H=0,I=c(),A=c(),Gb=c(),E=c(),R=function(a,b){a===b&&(ba=!0);return 0},S={}.hasOwnProperty,M=[],T=M.pop,aa=M.push,y=M.push,Z=M.slice,N=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===
b)return c;return-1},ea=RegExp("[\\x20\\t\\r\\n\\f]+","g"),V=RegExp("^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$","g"),fa=/^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,ka=/^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/,ma=/[\x20\t\r\n\f]|>/,na=/:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/,
oa=/^(?:\\.|[\w-]|[^\x00-\xa0])+$/,Y={ID:/^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,CLASS:/^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,TAG:/^((?:\\.|[\w-]|[^\x00-\xa0])+|[*])/,ATTR:/^\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\]/,PSEUDO:/^:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/,
CHILD:/^:(only|first|last|nth|nth-last)-(child|of-type)(?:\([\x20\t\r\n\f]*(even|odd|(([+-]|)(\d*)n|)[\x20\t\r\n\f]*(?:([+-]|)[\x20\t\r\n\f]*(\d+)|))[\x20\t\r\n\f]*\)|)/i,bool:/^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$/i,needsContext:/^[\x20\t\r\n\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i},ra=/HTML$/i,sa=/^(?:input|select|textarea|button)$/i,ta=
/^h\d$/i,U=/^[^{]+\{\s*\[native \w/,va=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ca=/[+~]/,ia=RegExp("\\\\([\\da-f]{1,6}[\\x20\\t\\r\\n\\f]?|([\\x20\\t\\r\\n\\f])|.)","ig"),ja=function(a,b,c){a="0x"+b-65536;return a!==a||c?b:0>a?String.fromCharCode(a+65536):String.fromCharCode(a>>10|55296,a&1023|56320)},pa=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,qa=function(a,b){return b?"\x00"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},ua=function(){xa()},za=Ja(function(a){return!0===
a.disabled&&"fieldset"===a.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{y.apply(M=Z.call(G.childNodes),G.childNodes),M[G.childNodes.length].nodeType}catch(x){y={apply:M.length?function(a,b){aa.apply(a,Z.call(b))}:function(a,b){for(var c=a.length,d=0;a[c++]=b[d++];);a.length=c-1}}}var K=b.support={};var Aa=b.isXML=function(a){var b=(a.ownerDocument||a).documentElement;return!ra.test(a.namespaceURI||b&&b.nodeName||"HTML")};var xa=b.setDocument=function(a){var b;a=a?a.ownerDocument||
a:G;if(a===w||9!==a.nodeType||!a.documentElement)return w;w=a;X=w.documentElement;W=!Aa(w);G!==w&&(b=w.defaultView)&&b.top!==b&&(b.addEventListener?b.addEventListener("unload",ua,!1):b.attachEvent&&b.attachEvent("onunload",ua));K.attributes=f(function(a){a.className="i";return!a.getAttribute("className")});K.getElementsByTagName=f(function(a){a.appendChild(w.createComment(""));return!a.getElementsByTagName("*").length});K.getElementsByClassName=U.test(w.getElementsByClassName);K.getById=f(function(a){X.appendChild(a).id=
D;return!w.getElementsByName||!w.getElementsByName(D).length});K.getById?(F.filter.ID=function(a){var b=a.replace(ia,ja);return function(a){return a.getAttribute("id")===b}},F.find.ID=function(a,b){if("undefined"!==typeof b.getElementById&&W){var c=b.getElementById(a);return c?[c]:[]}}):(F.filter.ID=function(a){var b=a.replace(ia,ja);return function(a){return(a="undefined"!==typeof a.getAttributeNode&&a.getAttributeNode("id"))&&a.value===b}},F.find.ID=function(a,b){if("undefined"!==typeof b.getElementById&&
W){var c,d,e=b.getElementById(a);if(e){if((c=e.getAttributeNode("id"))&&c.value===a)return[e];var f=b.getElementsByName(a);for(d=0;e=f[d++];)if((c=e.getAttributeNode("id"))&&c.value===a)return[e]}return[]}});F.find.TAG=K.getElementsByTagName?function(a,b){if("undefined"!==typeof b.getElementsByTagName)return b.getElementsByTagName(a);if(K.qsa)return b.querySelectorAll(a)}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){for(;c=f[e++];)1===c.nodeType&&d.push(c);return d}return f};
F.find.CLASS=K.getElementsByClassName&&function(a,b){if("undefined"!==typeof b.getElementsByClassName&&W)return b.getElementsByClassName(a)};ya=[];Q=[];if(K.qsa=U.test(w.querySelectorAll))f(function(a){X.appendChild(a).innerHTML="<a id='"+D+"'></a><select id='"+D+"-\r\\' msallowcapture=''><option selected=''></option></select>";a.querySelectorAll("[msallowcapture^='']").length&&Q.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")");a.querySelectorAll("[selected]").length||Q.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)");
a.querySelectorAll("[id~="+D+"-]").length||Q.push("~=");a.querySelectorAll(":checked").length||Q.push(":checked");a.querySelectorAll("a#"+D+"+*").length||Q.push(".#.+[+~]")}),f(function(a){a.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b=w.createElement("input");b.setAttribute("type","hidden");a.appendChild(b).setAttribute("name","D");a.querySelectorAll("[name=d]").length&&Q.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?=");2!==a.querySelectorAll(":enabled").length&&
Q.push(":enabled",":disabled");X.appendChild(a).disabled=!0;2!==a.querySelectorAll(":disabled").length&&Q.push(":enabled",":disabled");a.querySelectorAll("*,:x");Q.push(",.*:")});(K.matchesSelector=U.test(Pa=X.matches||X.webkitMatchesSelector||X.mozMatchesSelector||X.oMatchesSelector||X.msMatchesSelector))&&f(function(a){K.disconnectedMatch=Pa.call(a,"*");Pa.call(a,"[s!='']:x");ya.push("!=",":((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\x00-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)")});
Q=Q.length&&new RegExp(Q.join("|"));ya=ya.length&&new RegExp(ya.join("|"));Da=(b=U.test(X.compareDocumentPosition))||U.test(X.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&1===d.nodeType&&(c.contains?c.contains(d):a.compareDocumentPosition&&a.compareDocumentPosition(d)&16))}:function(a,b){if(b)for(;b=b.parentNode;)if(b===a)return!0;return!1};R=b?function(a,b){if(a===b)return ba=!0,0;var c=!a.compareDocumentPosition-!b.compareDocumentPosition;
if(c)return c;c=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1;return c&1||!K.sortDetached&&b.compareDocumentPosition(a)===c?a===w||a.ownerDocument===G&&Da(G,a)?-1:b===w||b.ownerDocument===G&&Da(G,b)?1:L?N(L,a)-N(L,b):0:c&4?-1:1}:function(a,b){if(a===b)return ba=!0,0;var c=0;var d=a.parentNode;var e=b.parentNode,f=[a],g=[b];if(!d||!e)return a===w?-1:b===w?1:d?-1:e?1:L?N(L,a)-N(L,b):0;if(d===e)return h(a,b);for(d=a;d=d.parentNode;)f.unshift(d);for(d=b;d=d.parentNode;)g.unshift(d);
for(;f[c]===g[c];)c++;return c?h(f[c],g[c]):f[c]===G?-1:g[c]===G?1:0};return w};b.matches=function(a,c){return b(a,null,null,c)};b.matchesSelector=function(a,c){(a.ownerDocument||a)!==w&&xa(a);if(!(!K.matchesSelector||!W||E[c+" "]||ya&&ya.test(c)||Q&&Q.test(c)))try{var d=Pa.call(a,c);if(d||K.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(P){E(c,!0)}return 0<b(c,w,null,[a]).length};b.contains=function(a,b){(a.ownerDocument||a)!==w&&xa(a);return Da(a,b)};b.attr=function(a,b){(a.ownerDocument||
a)!==w&&xa(a);var c=F.attrHandle[b.toLowerCase()];c=c&&S.call(F.attrHandle,b.toLowerCase())?c(a,b,!W):void 0;return void 0!==c?c:K.attributes||!W?a.getAttribute(b):(c=a.getAttributeNode(b))&&c.specified?c.value:null};b.escape=function(a){return(a+"").replace(pa,qa)};b.error=function(a){throw Error("Syntax error, unrecognized expression: "+a);};b.uniqueSort=function(a){var b,c=[],d=0,e=0;ba=!K.detectDuplicates;L=!K.sortStable&&a.slice(0);a.sort(R);if(ba){for(;b=a[e++];)b===a[e]&&(d=c.push(e));for(;d--;)a.splice(c[d],
1)}L=null;return a};var la=b.getText=function(a){var b="",c=0;var d=a.nodeType;if(!d)for(;d=a[c++];)b+=la(d);else if(1===d||9===d||11===d){if("string"===typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)b+=la(a)}else if(3===d||4===d)return a.nodeValue;return b};var F=b.selectors={cacheLength:50,createPseudo:d,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},
preFilter:{ATTR:function(a){a[1]=a[1].replace(ia,ja);a[3]=(a[3]||a[4]||a[5]||"").replace(ia,ja);"~="===a[2]&&(a[3]=" "+a[3]+" ");return a.slice(0,4)},CHILD:function(a){a[1]=a[1].toLowerCase();"nth"===a[1].slice(0,3)?(a[3]||b.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&b.error(a[0]);return a},PSEUDO:function(a){var b,c=!a[6]&&a[2];if(Y.CHILD.test(a[0]))return null;a[3]?a[2]=a[4]||a[5]||"":c&&na.test(c)&&(b=da(c,!0))&&(b=c.indexOf(")",
c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b));return a.slice(0,3)}},filter:{TAG:function(a){var b=a.replace(ia,ja).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=I[a+" "];return b||(b=new RegExp("(^|[\\x20\\t\\r\\n\\f])"+a+"([\\x20\\t\\r\\n\\f]|$)"),I(a,function(a){return b.test("string"===typeof a.className&&a.className||"undefined"!==typeof a.getAttribute&&a.getAttribute("class")||"")}))},ATTR:function(a,
c,d){return function(e){e=b.attr(e,a);if(null==e)return"!="===c;if(!c)return!0;e+="";return"="===c?e===d:"!="===c?e!==d:"^="===c?d&&0===e.indexOf(d):"*="===c?d&&-1<e.indexOf(d):"$="===c?d&&e.slice(-d.length)===d:"~="===c?-1<(" "+e.replace(ea," ")+" ").indexOf(d):"|="===c?e===d||e.slice(0,d.length+1)===d+"-":!1}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,l){var k,m;c=f!==g?"nextSibling":
"previousSibling";var x=b.parentNode,n=h&&b.nodeName.toLowerCase();l=!l&&!h;var q=!1;if(x){if(f){for(;c;){for(k=b;k=k[c];)if(h?k.nodeName.toLowerCase()===n:1===k.nodeType)return!1;var B=c="only"===a&&!B&&"nextSibling"}return!0}B=[g?x.firstChild:x.lastChild];if(g&&l){k=x;var J=k[D]||(k[D]={});J=J[k.uniqueID]||(J[k.uniqueID]={});q=J[a]||[];q=(m=q[0]===ha&&q[1])&&q[2];for(k=m&&x.childNodes[m];k=++m&&k&&k[c]||(q=m=0)||B.pop();)if(1===k.nodeType&&++q&&k===b){J[a]=[ha,m,q];break}}else if(l&&(k=b,J=k[D]||
(k[D]={}),J=J[k.uniqueID]||(J[k.uniqueID]={}),q=J[a]||[],q=m=q[0]===ha&&q[1]),!1===q)for(;(k=++m&&k&&k[c]||(q=m=0)||B.pop())&&((h?k.nodeName.toLowerCase()!==n:1!==k.nodeType)||!++q||(l&&(J=k[D]||(k[D]={}),J=J[k.uniqueID]||(J[k.uniqueID]={}),J[a]=[ha,q]),k!==b)););q-=e;return q===d||0===q%d&&0<=q/d}}},PSEUDO:function(a,c){var e=F.pseudos[a]||F.setFilters[a.toLowerCase()]||b.error("unsupported pseudo: "+a);if(e[D])return e(c);if(1<e.length){var f=[a,a,"",c];return F.setFilters.hasOwnProperty(a.toLowerCase())?
d(function(a,b){for(var d,f=e(a,c),g=f.length;g--;)d=N(a,f[g]),a[d]=!(b[d]=f[g])}):function(a){return e(a,0,f)}}return e}},pseudos:{not:d(function(a){var b=[],c=[],e=wa(a.replace(V,"$1"));return e[D]?d(function(a,b,c,d){d=e(a,null,d,[]);for(var f=a.length;f--;)if(c=d[f])a[f]=!(b[f]=c)}):function(a,d,f){b[0]=a;e(b,null,f,c);b[0]=null;return!c.pop()}}),has:d(function(a){return function(c){return 0<b(a,c).length}}),contains:d(function(a){a=a.replace(ia,ja);return function(b){return-1<(b.textContent||
la(b)).indexOf(a)}}),lang:d(function(a){oa.test(a||"")||b.error("unsupported lang: "+a);a=a.replace(ia,ja).toLowerCase();return function(b){var c;do if(c=W?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===X},focus:function(a){return a===w.activeElement&&(!w.hasFocus||w.hasFocus())&&
!!(a.type||a.href||~a.tabIndex)},enabled:m(!1),disabled:m(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return!0===a.selected},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(6>a.nodeType)return!1;return!0},parent:function(a){return!F.pseudos.empty(a)},header:function(a){return ta.test(a.nodeName)},input:function(a){return sa.test(a.nodeName)},button:function(a){var b=
a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:q(function(){return[0]}),last:q(function(a,b){return[b-1]}),eq:q(function(a,b,c){return[0>c?c+b:c]}),even:q(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:q(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:q(function(a,b,c){for(b=0>c?c+b:c>b?b:c;0<=--b;)a.push(b);
return a}),gt:q(function(a,b,c){for(c=0>c?c+b:c;++c<b;)a.push(c);return a})}};F.pseudos.nth=F.pseudos.eq;for(O in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})F.pseudos[O]=k(O);for(O in{submit:!0,reset:!0})F.pseudos[O]=l(O);t.prototype=F.filters=F.pseudos;F.setFilters=new t;var da=b.tokenize=function(a,c){var d,e,f,g,h;if(g=A[a+" "])return c?0:g.slice(0);g=a;var k=[];for(h=F.preFilter;g;){if(!l||(d=fa.exec(g)))d&&(g=g.slice(d[0].length)||g),k.push(e=[]);var l=!1;if(d=ka.exec(g))l=d.shift(),
e.push({value:l,type:d[0].replace(V," ")}),g=g.slice(l.length);for(f in F.filter)!(d=Y[f].exec(g))||h[f]&&!(d=h[f](d))||(l=d.shift(),e.push({value:l,type:f,matches:d}),g=g.slice(l.length));if(!l)break}return c?g.length:g?b.error(a):A(a,k).slice(0)};var wa=b.compile=function(a,b){var c,d=[],e=[],f=Gb[a+" "];if(!f){b||(b=da(a));for(c=b.length;c--;)f=z(b[c]),f[D]?d.push(f):e.push(f);f=Gb(a,pc(e,d));f.selector=a}return f};var Ba=b.select=function(a,b,c,d){var e,f,g,h="function"===typeof a&&a,k=!d&&da(a=
h.selector||a);c=c||[];if(1===k.length){var l=k[0]=k[0].slice(0);if(2<l.length&&"ID"===(f=l[0]).type&&9===b.nodeType&&W&&F.relative[l[1].type]){b=(F.find.ID(f.matches[0].replace(ia,ja),b)||[])[0];if(!b)return c;h&&(b=b.parentNode);a=a.slice(l.shift().value.length)}for(e=Y.needsContext.test(a)?0:l.length;e--;){f=l[e];if(F.relative[g=f.type])break;if(g=F.find[g])if(d=g(f.matches[0].replace(ia,ja),ca.test(l[0].type)&&n(b.parentNode)||b)){l.splice(e,1);a=d.length&&p(l);if(!a)return y.apply(c,d),c;break}}}(h||
wa(a,k))(d,b,!W,c,!b||ca.test(a)&&n(b.parentNode)||b);return c};K.sortStable=D.split("").sort(R).join("")===D;K.detectDuplicates=!!ba;xa();K.sortDetached=f(function(a){return a.compareDocumentPosition(w.createElement("fieldset"))&1});f(function(a){a.innerHTML="<a href='#'></a>";return"#"===a.firstChild.getAttribute("href")})||g("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)});K.attributes&&f(function(a){a.innerHTML="<input/>";a.firstChild.setAttribute("value",
"");return""===a.firstChild.getAttribute("value")})||g("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue});f(function(a){return null==a.getAttribute("disabled")})||g("checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",function(a,b,c){var d;if(!c)return!0===a[b]?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null});return b}(n);d.find=ka;d.expr=ka.selectors;d.expr[":"]=d.expr.pseudos;
d.uniqueSort=d.unique=ka.uniqueSort;d.text=ka.getText;d.isXMLDoc=ka.isXML;d.contains=ka.contains;d.escapeSelector=ka.escape;var ca=function(a,b,c){for(var e=[],f=void 0!==c;(a=a[b])&&9!==a.nodeType;)if(1===a.nodeType){if(f&&d(a).is(c))break;e.push(a)}return e},Hb=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},Ib=d.expr.match.needsContext,Jb=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;d.filter=function(a,b,c){var e=b[0];c&&(a=":not("+a+
")");return 1===b.length&&1===e.nodeType?d.find.matchesSelector(e,a)?[e]:[]:d.find.matches(a,d.grep(b,function(a){return 1===a.nodeType}))};d.fn.extend({find:function(a){var b,c=this.length,e=this;if("string"!==typeof a)return this.pushStack(d(a).filter(function(){for(b=0;b<c;b++)if(d.contains(e[b],this))return!0}));var f=this.pushStack([]);for(b=0;b<c;b++)d.find(a,e[b],f);return 1<c?d.uniqueSort(f):f},filter:function(a){return this.pushStack(Sa(this,a||[],!1))},not:function(a){return this.pushStack(Sa(this,
a||[],!0))},is:function(a){return!!Sa(this,"string"===typeof a&&Ib.test(a)?d(a):a||[],!1).length}});var rc=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(d.fn.init=function(a,b,c){if(!a)return this;c=c||sc;if("string"===typeof a){var e="<"===a[0]&&">"===a[a.length-1]&&3<=a.length?[null,a,null]:rc.exec(a);if(!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof d?b[0]:b,d.merge(this,d.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:u,!0)),Jb.test(e[1])&&d.isPlainObject(b))for(e in b)if(p(this[e]))this[e](b[e]);
else this.attr(e,b[e])}else if(a=u.getElementById(e[2]))this[0]=a,this.length=1;return this}return a.nodeType?(this[0]=a,this.length=1,this):p(a)?void 0!==c.ready?c.ready(a):a(d):d.makeArray(a,this)}).prototype=d.fn;var sc=d(u);var tc=/^(?:parents|prev(?:Until|All))/,uc={children:!0,contents:!0,next:!0,prev:!0};d.fn.extend({has:function(a){var b=d(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(d.contains(this,b[a]))return!0})},closest:function(a,b){var c,e=0,f=this.length,
g=[],h="string"!==typeof a&&d(a);if(!Ib.test(a))for(;e<f;e++)for(c=this[e];c&&c!==b;c=c.parentNode)if(11>c.nodeType&&(h?-1<h.index(c):1===c.nodeType&&d.find.matchesSelector(c,a))){g.push(c);break}return this.pushStack(1<g.length?d.uniqueSort(g):g)},index:function(a){return a?"string"===typeof a?Ea.call(d(a),this[0]):Ea.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(d.uniqueSort(d.merge(this.get(),d(a,b))))},addBack:function(a){return this.add(null==
a?this.prevObject:this.prevObject.filter(a))}});d.each({parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},parents:function(a){return ca(a,"parentNode")},parentsUntil:function(a,b,c){return ca(a,"parentNode",c)},next:function(a){return jb(a,"nextSibling")},prev:function(a){return jb(a,"previousSibling")},nextAll:function(a){return ca(a,"nextSibling")},prevAll:function(a){return ca(a,"previousSibling")},nextUntil:function(a,b,c){return ca(a,"nextSibling",c)},prevUntil:function(a,b,
c){return ca(a,"previousSibling",c)},siblings:function(a){return Hb((a.parentNode||{}).firstChild,a)},children:function(a){return Hb(a.firstChild)},contents:function(a){if("undefined"!==typeof a.contentDocument)return a.contentDocument;R(a,"template")&&(a=a.content||a);return d.merge([],a.childNodes)}},function(a,b){d.fn[a]=function(c,e){var f=d.map(this,b,c);"Until"!==a.slice(-5)&&(e=c);e&&"string"===typeof e&&(f=d.filter(e,f));1<this.length&&(uc[a]||d.uniqueSort(f),tc.test(a)&&f.reverse());return this.pushStack(f)}});
var M=/[^\x20\t\r\n\f]+/g;d.Callbacks=function(a){a="string"===typeof a?Xb(a):d.extend({},a);var b,c,e,f,g=[],h=[],k=-1,l=function(){f=f||a.once;for(e=b=!0;h.length;k=-1)for(c=h.shift();++k<g.length;)!1===g[k].apply(c[0],c[1])&&a.stopOnFalse&&(k=g.length,c=!1);a.memory||(c=!1);b=!1;f&&(g=c?[]:"")},m={add:function(){g&&(c&&!b&&(k=g.length-1,h.push(c)),function hc(b){d.each(b,function(b,c){p(c)?a.unique&&m.has(c)||g.push(c):c&&c.length&&"string"!==ma(c)&&hc(c)})}(arguments),c&&!b&&l());return this},
remove:function(){d.each(arguments,function(a,b){for(var c;-1<(c=d.inArray(b,g,c));)g.splice(c,1),c<=k&&k--});return this},has:function(a){return a?-1<d.inArray(a,g):0<g.length},empty:function(){g&&(g=[]);return this},disable:function(){f=h=[];g=c="";return this},disabled:function(){return!g},lock:function(){f=h=[];c||b||(g=c="");return this},locked:function(){return!!f},fireWith:function(a,c){f||(c=c||[],c=[a,c.slice?c.slice():c],h.push(c),b||l());return this},fire:function(){m.fireWith(this,arguments);
return this},fired:function(){return!!e}};return m};d.extend({Deferred:function(a){var b=[["notify","progress",d.Callbacks("memory"),d.Callbacks("memory"),2],["resolve","done",d.Callbacks("once memory"),d.Callbacks("once memory"),0,"resolved"],["reject","fail",d.Callbacks("once memory"),d.Callbacks("once memory"),1,"rejected"]],c="pending",e={state:function(){return c},always:function(){f.done(arguments).fail(arguments);return this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=
arguments;return d.Deferred(function(c){d.each(b,function(b,d){var e=p(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);if(a&&p(a.promise))a.promise().progress(c.notify).done(c.resolve).fail(c.reject);else c[d[0]+"With"](this,e?[a]:arguments)})});a=null}).promise()},then:function(a,c,e){function f(a,b,c,e){return function(){var h=this,k=arguments,l=function(){if(!(a<g)){var d=c.apply(h,k);if(d===b.promise())throw new TypeError("Thenable self-resolution");var l=d&&("object"===
typeof d||"function"===typeof d)&&d.then;p(l)?e?l.call(d,f(g,b,oa,e),f(g,b,Fa,e)):(g++,l.call(d,f(g,b,oa,e),f(g,b,Fa,e),f(g,b,oa,b.notifyWith))):(c!==oa&&(h=void 0,k=[d]),(e||b.resolveWith)(h,k))}},m=e?l:function(){try{l()}catch(z){d.Deferred.exceptionHook&&d.Deferred.exceptionHook(z,m.stackTrace),a+1>=g&&(c!==Fa&&(h=void 0,k=[z]),b.rejectWith(h,k))}};a?m():(d.Deferred.getStackHook&&(m.stackTrace=d.Deferred.getStackHook()),n.setTimeout(m))}}var g=0;return d.Deferred(function(d){b[0][3].add(f(0,d,
p(e)?e:oa,d.notifyWith));b[1][3].add(f(0,d,p(a)?a:oa));b[2][3].add(f(0,d,p(c)?c:Fa))}).promise()},promise:function(a){return null!=a?d.extend(a,e):e}},f={};d.each(b,function(a,d){var g=d[2],h=d[5];e[d[1]]=g.add;h&&g.add(function(){c=h},b[3-a][2].disable,b[3-a][3].disable,b[0][2].lock,b[0][3].lock);g.add(d[3].fire);f[d[0]]=function(){f[d[0]+"With"](this===f?void 0:this,arguments);return this};f[d[0]+"With"]=g.fireWith});e.promise(f);a&&a.call(f,f);return f},when:function(a){var b=arguments.length,
c=b,e=Array(c),f=Z.call(arguments),g=d.Deferred(),h=function(a){return function(c){e[a]=this;f[a]=1<arguments.length?Z.call(arguments):c;--b||g.resolveWith(e,f)}};if(1>=b&&(kb(a,g.done(h(c)).resolve,g.reject,!b),"pending"===g.state()||p(f[c]&&f[c].then)))return g.then();for(;c--;)kb(f[c],h(c),g.reject);return g.promise()}});var vc=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;d.Deferred.exceptionHook=function(a,b){n.console&&n.console.warn&&a&&vc.test(a.name)&&n.console.warn("jQuery.Deferred exception: "+
a.message,a.stack,b)};d.readyException=function(a){n.setTimeout(function(){throw a;})};var eb=d.Deferred();d.fn.ready=function(a){eb.then(a)["catch"](function(a){d.readyException(a)});return this};d.extend({isReady:!1,readyWait:1,ready:function(a){(!0===a?--d.readyWait:d.isReady)||(d.isReady=!0,!0!==a&&0<--d.readyWait||eb.resolveWith(u,[d]))}});d.ready.then=eb.then;"complete"===u.readyState||"loading"!==u.readyState&&!u.documentElement.doScroll?n.setTimeout(d.ready):(u.addEventListener("DOMContentLoaded",
Ga),n.addEventListener("load",Ga));var y=function(a,b,c,e,f,g,h){var k=0,l=a.length,m=null==c;if("object"===ma(c))for(k in f=!0,c)y(a,b,k,c[k],!0,g,h);else if(void 0!==e&&(f=!0,p(e)||(h=!0),m&&(h?(b.call(a,e),b=null):(m=b,b=function(a,b,c){return m.call(d(a),c)})),b))for(;k<l;k++)b(a[k],c,h?e:e.call(a[k],k,b(a[k],c)));return f?a:m?b.call(a):l?b(a[0],c):g},Zb=/^-ms-/,$b=/-([a-z])/g,Qa=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};pa.uid=1;pa.prototype={cache:function(a){var b=a[this.expando];
b||(b={},Qa(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0})));return b},set:function(a,b,c){var d;a=this.cache(a);if("string"===typeof b)a[T(b)]=c;else for(d in b)a[T(d)]=b[d];return a},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][T(b)]},access:function(a,b,c){if(void 0===b||b&&"string"===typeof b&&void 0===c)return this.get(a,b);this.set(a,b,c);return void 0!==c?c:b},remove:function(a,b){var c,e=a[this.expando];
if(void 0!==e){if(void 0!==b)for(Array.isArray(b)?b=b.map(T):(b=T(b),b=b in e?[b]:b.match(M)||[]),c=b.length;c--;)delete e[b[c]];if(void 0===b||d.isEmptyObject(e))a.nodeType?a[this.expando]=void 0:delete a[this.expando]}},hasData:function(a){a=a[this.expando];return void 0!==a&&!d.isEmptyObject(a)}};var t=new pa,H=new pa,bc=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ac=/[A-Z]/g;d.extend({hasData:function(a){return H.hasData(a)||t.hasData(a)},data:function(a,b,c){return H.access(a,b,c)},removeData:function(a,
b){H.remove(a,b)},_data:function(a,b,c){return t.access(a,b,c)},_removeData:function(a,b){t.remove(a,b)}});d.fn.extend({data:function(a,b){var c,d=this[0],f=d&&d.attributes;if(void 0===a){if(this.length){var g=H.get(d);if(1===d.nodeType&&!t.get(d,"hasDataAttrs")){for(c=f.length;c--;)if(f[c]){var h=f[c].name;0===h.indexOf("data-")&&(h=T(h.slice(5)),lb(d,h,g[h]))}t.set(d,"hasDataAttrs",!0)}}return g}return"object"===typeof a?this.each(function(){H.set(this,a)}):y(this,function(b){if(d&&void 0===b){var c=
H.get(d,a);if(void 0!==c)return c;c=lb(d,a);if(void 0!==c)return c}else this.each(function(){H.set(this,a,b)})},null,b,1<arguments.length,null,!0)},removeData:function(a){return this.each(function(){H.remove(this,a)})}});d.extend({queue:function(a,b,c){if(a){b=(b||"fx")+"queue";var e=t.get(a,b);c&&(!e||Array.isArray(c)?e=t.access(a,b,d.makeArray(c)):e.push(c));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=d.queue(a,b),e=c.length,f=c.shift(),g=d._queueHooks(a,b),h=function(){d.dequeue(a,b)};
"inprogress"===f&&(f=c.shift(),e--);f&&("fx"===b&&c.unshift("inprogress"),delete g.stop,f.call(a,h,g));!e&&g&&g.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return t.get(a,c)||t.access(a,c,{empty:d.Callbacks("once memory").add(function(){t.remove(a,[b+"queue",c])})})}});d.fn.extend({queue:function(a,b){var c=2;"string"!==typeof a&&(b=a,a="fx",c--);return arguments.length<c?d.queue(this[0],a):void 0===b?this:this.each(function(){var c=d.queue(this,a,b);d._queueHooks(this,a);"fx"===
a&&"inprogress"!==c[0]&&d.dequeue(this,a)})},dequeue:function(a){return this.each(function(){d.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,e=1,f=d.Deferred(),g=this,h=this.length,k=function(){--e||f.resolveWith(g,[g])};"string"!==typeof a&&(b=a,a=void 0);for(a=a||"fx";h--;)(c=t.get(g[h],a+"queueHooks"))&&c.empty&&(e++,c.empty.add(k));k();return f.promise(b)}});var Kb=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qa=new RegExp("^(?:([+-])=|)("+
Kb+")([a-z%]*)$","i"),aa=["Top","Right","Bottom","Left"],za=u.documentElement,ra=function(a){return d.contains(a.ownerDocument,a)},wc={composed:!0};za.getRootNode&&(ra=function(a){return d.contains(a.ownerDocument,a)||a.getRootNode(wc)===a.ownerDocument});var Ha=function(a,b){a=b||a;return"none"===a.style.display||""===a.style.display&&ra(a)&&"none"===d.css(a,"display")},Lb=function(a,b,c,d){var e,g={};for(e in b)g[e]=a.style[e],a.style[e]=b[e];c=c.apply(a,d||[]);for(e in b)a.style[e]=g[e];return c},
nb={};d.fn.extend({show:function(){return Y(this,!0)},hide:function(){return Y(this)},toggle:function(a){return"boolean"===typeof a?a?this.show():this.hide():this.each(function(){Ha(this)?d(this).show():d(this).hide()})}});var Aa=/^(?:checkbox|radio)$/i,pb=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,qb=/^$|^module$|\/(?:java|ecma)script/i,E={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],
td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};E.optgroup=E.option;E.tbody=E.tfoot=E.colgroup=E.caption=E.thead;E.th=E.td;var cc=/<|&#?\w+;/;(function(){var a=u.createDocumentFragment().appendChild(u.createElement("div")),b=u.createElement("input");b.setAttribute("type","radio");b.setAttribute("checked","checked");b.setAttribute("name","t");a.appendChild(b);v.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked;a.innerHTML="<textarea>x</textarea>";v.noCloneChecked=!!a.cloneNode(!0).lastChild.defaultValue})();
var xc=/^key/,yc=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Mb=/^([^.]*)(?:\.(.+)|)/;d.event={global:{},add:function(a,b,c,e,f){var g,h,k,l,m;if(k=t.get(a)){if(c.handler){var n=c;c=n.handler;f=n.selector}f&&d.find.matchesSelector(za,f);c.guid||(c.guid=d.guid++);(h=k.events)||(h=k.events={});(g=k.handle)||(g=k.handle=function(b){return"undefined"!==typeof d&&d.event.triggered!==b.type?d.event.dispatch.apply(a,arguments):void 0});b=(b||"").match(M)||[""];for(k=b.length;k--;){var r=Mb.exec(b[k])||
[];var p=l=r[1];var u=(r[2]||"").split(".").sort();p&&(r=d.event.special[p]||{},p=(f?r.delegateType:r.bindType)||p,r=d.event.special[p]||{},l=d.extend({type:p,origType:l,data:e,handler:c,guid:c.guid,selector:f,needsContext:f&&d.expr.match.needsContext.test(f),namespace:u.join(".")},n),(m=h[p])||(m=h[p]=[],m.delegateCount=0,r.setup&&!1!==r.setup.call(a,e,u,g)||a.addEventListener&&a.addEventListener(p,g)),r.add&&(r.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),f?m.splice(m.delegateCount++,
0,l):m.push(l),d.event.global[p]=!0)}}},remove:function(a,b,c,e,f){var g,h,k,l,m,n=t.hasData(a)&&t.get(a);if(n&&(k=n.events)){b=(b||"").match(M)||[""];for(l=b.length;l--;){var r=Mb.exec(b[l])||[];var p=m=r[1];var u=(r[2]||"").split(".").sort();if(p){var v=d.event.special[p]||{};p=(e?v.delegateType:v.bindType)||p;var C=k[p]||[];r=r[2]&&new RegExp("(^|\\.)"+u.join("\\.(?:.*\\.|)")+"(\\.|$)");for(h=g=C.length;g--;){var y=C[g];!f&&m!==y.origType||c&&c.guid!==y.guid||r&&!r.test(y.namespace)||e&&e!==y.selector&&
("**"!==e||!y.selector)||(C.splice(g,1),y.selector&&C.delegateCount--,v.remove&&v.remove.call(a,y))}h&&!C.length&&(v.teardown&&!1!==v.teardown.call(a,u,n.handle)||d.removeEvent(a,p,n.handle),delete k[p])}else for(p in k)d.event.remove(a,p+b[l],c,e,!0)}d.isEmptyObject(k)&&t.remove(a,"handle events")}},dispatch:function(a){var b=d.event.fix(a),c,e,f,g=Array(arguments.length);var h=(t.get(this,"events")||{})[b.type]||[];var k=d.event.special[b.type]||{};g[0]=b;for(c=1;c<arguments.length;c++)g[c]=arguments[c];
b.delegateTarget=this;if(!k.preDispatch||!1!==k.preDispatch.call(this,b)){var l=d.event.handlers.call(this,b,h);for(c=0;(f=l[c++])&&!b.isPropagationStopped();)for(b.currentTarget=f.elem,h=0;(e=f.handlers[h++])&&!b.isImmediatePropagationStopped();)if(!b.rnamespace||!1===e.namespace||b.rnamespace.test(e.namespace))b.handleObj=e,b.data=e.data,e=((d.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,g),void 0!==e&&!1===(b.result=e)&&(b.preventDefault(),b.stopPropagation());k.postDispatch&&
k.postDispatch.call(this,b);return b.result}},handlers:function(a,b){var c,e=[],f=b.delegateCount,g=a.target;if(f&&g.nodeType&&!("click"===a.type&&1<=a.button))for(;g!==this;g=g.parentNode||this)if(1===g.nodeType&&("click"!==a.type||!0!==g.disabled)){var h=[];var k={};for(c=0;c<f;c++){var l=b[c];var m=l.selector+" ";void 0===k[m]&&(k[m]=l.needsContext?-1<d(m,this).index(g):d.find(m,this,null,[g]).length);k[m]&&h.push(l)}h.length&&e.push({elem:g,handlers:h})}f<b.length&&e.push({elem:this,handlers:b.slice(f)});
return e},addProp:function(a,b){Object.defineProperty(d.Event.prototype,a,{enumerable:!0,configurable:!0,get:p(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[d.expando]?a:new d.Event(a)},special:{load:{noBubble:!0},click:{setup:function(a){a=this||a;Aa.test(a.type)&&a.click&&R(a,"input")&&Ia(a,
"click",sa);return!1},trigger:function(a){a=this||a;Aa.test(a.type)&&a.click&&R(a,"input")&&Ia(a,"click");return!0},_default:function(a){a=a.target;return Aa.test(a.type)&&a.click&&R(a,"input")&&t.get(a,"click")||R(a,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}};d.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)};d.Event=function(a,b){if(!(this instanceof d.Event))return new d.Event(a,b);a&&
a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&!1===a.returnValue?sa:ta,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a;b&&d.extend(this,b);this.timeStamp=a&&a.timeStamp||Date.now();this[d.expando]=!0};d.Event.prototype={constructor:d.Event,isDefaultPrevented:ta,isPropagationStopped:ta,isImmediatePropagationStopped:ta,isSimulated:!1,
preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=sa;a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=sa;a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=sa;a&&!this.isSimulated&&a.stopImmediatePropagation();this.stopPropagation()}};d.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,
eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&xc.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&yc.test(a.type)?b&1?1:b&2?3:b&4?2:0:a.which}},d.event.addProp);d.each({focus:"focusin",blur:"focusout"},
function(a,b){d.event.special[a]={setup:function(){Ia(this,a,dc);return!1},trigger:function(){Ia(this,a);return!0},delegateType:b}});d.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){d.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=a.relatedTarget,f=a.handleObj;if(!c||c!==this&&!d.contains(this,c)){a.type=f.origType;var g=f.handler.apply(this,arguments);a.type=b}return g}}});d.fn.extend({on:function(a,b,c,
d){return Ua(this,a,b,c,d)},one:function(a,b,c,d){return Ua(this,a,b,c,d,1)},off:function(a,b,c){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;d(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if("object"===typeof a){for(e in a)this.off(e,b,a[e]);return this}if(!1===b||"function"===typeof b)c=b,b=void 0;!1===c&&(c=ta);return this.each(function(){d.event.remove(this,a,c,b)})}});var zc=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
Ac=/<script|<style|<link/i,gc=/checked\s*(?:[^=]|=\s*.checked.)/i,ic=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;d.extend({htmlPrefilter:function(a){return a.replace(zc,"<$1></$2>")},clone:function(a,b,c){var e,f=a.cloneNode(!0),g=ra(a);if(!(v.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||d.isXMLDoc(a))){var h=I(f);var k=I(a);var l=0;for(e=k.length;l<e;l++){var m=k[l],n=h[l],p=n.nodeName.toLowerCase();if("input"===p&&Aa.test(m.type))n.checked=m.checked;else if("input"===p||"textarea"===p)n.defaultValue=
m.defaultValue}}if(b)if(c)for(k=k||I(a),h=h||I(f),l=0,e=k.length;l<e;l++)sb(k[l],h[l]);else sb(a,f);h=I(f,"script");0<h.length&&Ta(h,!g&&I(a,"script"));return f},cleanData:function(a){for(var b,c,e,f=d.event.special,g=0;void 0!==(c=a[g]);g++)if(Qa(c)){if(b=c[t.expando]){if(b.events)for(e in b.events)f[e]?d.event.remove(c,e):d.removeEvent(c,e,b.handle);c[t.expando]=void 0}c[H.expando]&&(c[H.expando]=void 0)}}});d.fn.extend({detach:function(a){return ub(this,a,!0)},remove:function(a){return ub(this,
a)},text:function(a){return y(this,function(a){return void 0===a?d.text(this):this.empty().each(function(){if(1===this.nodeType||11===this.nodeType||9===this.nodeType)this.textContent=a})},null,a,arguments.length)},append:function(){return U(this,arguments,function(a){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||rb(this,a).appendChild(a)})},prepend:function(){return U(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=rb(this,a);b.insertBefore(a,
b.firstChild)}})},before:function(){return U(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return U(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(d.cleanData(I(a,!1)),a.textContent="");return this},clone:function(a,b){a=null==a?!1:a;b=null==b?a:b;return this.map(function(){return d.clone(this,a,b)})},html:function(a){return y(this,
function(a){var b=this[0]||{},e=0,f=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"===typeof a&&!Ac.test(a)&&!E[(pb.exec(a)||["",""])[1].toLowerCase()]){a=d.htmlPrefilter(a);try{for(;e<f;e++)b=this[e]||{},1===b.nodeType&&(d.cleanData(I(b,!1)),b.innerHTML=a);b=0}catch(g){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return U(this,arguments,function(b){var c=this.parentNode;0>d.inArray(this,a)&&(d.cleanData(I(this)),c&&c.replaceChild(b,
this))},a)}});d.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){d.fn[a]=function(a){for(var c=[],f=d(a),g=f.length-1,h=0;h<=g;h++)a=h===g?this:this.clone(!0),d(f[h])[b](a),cb.apply(c,a.get());return this.pushStack(c)}});var Va=new RegExp("^("+Kb+")(?!px)[a-z%]+$","i"),Ka=function(a){var b=a.ownerDocument.defaultView;b&&b.opener||(b=n);return b.getComputedStyle(a)},jc=new RegExp(aa.join("|"),"i");(function(){function a(){if(k){h.style.cssText=
"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";k.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";za.appendChild(h).appendChild(k);var a=n.getComputedStyle(k);b="1%"!==a.top;g=12===Math.round(parseFloat(a.marginLeft));k.style.right="60%";f=36===Math.round(parseFloat(a.right));c=36===Math.round(parseFloat(a.width));k.style.position="absolute";e=12===Math.round(parseFloat(k.offsetWidth/
3));za.removeChild(h);k=null}}var b,c,e,f,g,h=u.createElement("div"),k=u.createElement("div");k.style&&(k.style.backgroundClip="content-box",k.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===k.style.backgroundClip,d.extend(v,{boxSizingReliable:function(){a();return c},pixelBoxStyles:function(){a();return f},pixelPosition:function(){a();return b},reliableMarginLeft:function(){a();return g},scrollboxSize:function(){a();return e}}))})();var yb=["Webkit","Moz","ms"],xb=u.createElement("div").style,
wb={},Bc=/^(none|table(?!-c[ea]).+)/,Nb=/^--/,Cc={position:"absolute",visibility:"hidden",display:"block"},Ob={letterSpacing:"0",fontWeight:"400"};d.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=ua(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,
widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(a,b,c,e){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var f,g=T(b),h=Nb.test(b),k=a.style;h||(b=Wa(g));var l=d.cssHooks[b]||d.cssHooks[g];if(void 0!==c){var m=typeof c;"string"===m&&(f=qa.exec(c))&&f[1]&&(c=mb(a,b,f),m="number");null!=c&&c===c&&("number"!==m||h||(c+=f&&f[3]||(d.cssNumber[g]?"":"px")),v.clearCloneStyle||""!==c||0!==b.indexOf("background")||(k[b]="inherit"),l&&"set"in l&&void 0===(c=l.set(a,c,e))||(h?k.setProperty(b,c):k[b]=
c))}else return l&&"get"in l&&void 0!==(f=l.get(a,!1,e))?f:k[b]}},css:function(a,b,c,e){var f;var g=T(b);Nb.test(b)||(b=Wa(g));(g=d.cssHooks[b]||d.cssHooks[g])&&"get"in g&&(f=g.get(a,!0,c));void 0===f&&(f=ua(a,b,e));"normal"===f&&b in Ob&&(f=Ob[b]);return""===c||c?(a=parseFloat(f),!0===c||isFinite(a)?a||0:f):f}});d.each(["height","width"],function(a,b){d.cssHooks[b]={get:function(a,e,f){if(e)return!Bc.test(d.css(a,"display"))||a.getClientRects().length&&a.getBoundingClientRect().width?Ab(a,b,f):Lb(a,
Cc,function(){return Ab(a,b,f)})},set:function(a,e,f){var c,h=Ka(a),k=!v.scrollboxSize()&&"absolute"===h.position,l=(k||f)&&"border-box"===d.css(a,"boxSizing",!1,h);f=f?Xa(a,b,f,l,h):0;l&&k&&(f-=Math.ceil(a["offset"+b[0].toUpperCase()+b.slice(1)]-parseFloat(h[b])-Xa(a,b,"border",!1,h)-.5));f&&(c=qa.exec(e))&&"px"!==(c[3]||"px")&&(a.style[b]=e,e=d.css(a,b));return zb(a,e,f)}}});d.cssHooks.marginLeft=vb(v.reliableMarginLeft,function(a,b){if(b)return(parseFloat(ua(a,"marginLeft"))||a.getBoundingClientRect().left-
Lb(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+"px"});d.each({margin:"",padding:"",border:"Width"},function(a,b){d.cssHooks[a+b]={expand:function(c){var d=0,f={};for(c="string"===typeof c?c.split(" "):[c];4>d;d++)f[a+aa[d]+b]=c[d]||c[d-2]||c[0];return f}};"margin"!==a&&(d.cssHooks[a+b].set=zb)});d.fn.extend({css:function(a,b){return y(this,function(a,b,f){var c,e={},k=0;if(Array.isArray(b)){f=Ka(a);for(c=b.length;k<c;k++)e[b[k]]=d.css(a,b[k],!1,f);return e}return void 0!==
f?d.style(a,b,f):d.css(a,b)},a,b,1<arguments.length)}});d.Tween=A;A.prototype={constructor:A,init:function(a,b,c,e,f,g){this.elem=a;this.prop=c;this.easing=f||d.easing._default;this.options=b;this.start=this.now=this.cur();this.end=e;this.unit=g||(d.cssNumber[c]?"":"px")},cur:function(){var a=A.propHooks[this.prop];return a&&a.get?a.get(this):A.propHooks._default.get(this)},run:function(a){var b,c=A.propHooks[this.prop];this.pos=this.options.duration?b=d.easing[this.easing](a,this.options.duration*
a,0,1,this.options.duration):b=a;this.now=(this.end-this.start)*b+this.start;this.options.step&&this.options.step.call(this.elem,this.now,this);c&&c.set?c.set(this):A.propHooks._default.set(this);return this}};A.prototype.init.prototype=A.prototype;A.propHooks={_default:{get:function(a){return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(a=d.css(a.elem,a.prop,""))&&"auto"!==a?a:0},set:function(a){if(d.fx.step[a.prop])d.fx.step[a.prop](a);else 1!==a.elem.nodeType||
!d.cssHooks[a.prop]&&null==a.elem.style[Wa(a.prop)]?a.elem[a.prop]=a.now:d.style(a.elem,a.prop,a.now+a.unit)}}};A.propHooks.scrollTop=A.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}};d.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"};d.fx=A.prototype.init;d.fx.step={};var va,La,Dc=/^(?:toggle|show|hide)$/,Ec=/queueHooks$/;d.Animation=d.extend(S,{tweeners:{"*":[function(a,b){var c=this.createTween(a,
b);mb(c.elem,a,qa.exec(b),c);return c}]},tweener:function(a,b){p(a)?(b=a,a=["*"]):a=a.match(M);for(var c,d=0,f=a.length;d<f;d++)c=a[d],S.tweeners[c]=S.tweeners[c]||[],S.tweeners[c].unshift(b)},prefilters:[function(a,b,c){var e;var f="width"in b||"height"in b;var g=this,h={},k=a.style,l=a.nodeType&&Ha(a),m=t.get(a,"fxshow");if(!c.queue){var n=d._queueHooks(a,"fx");if(null==n.unqueued){n.unqueued=0;var p=n.empty.fire;n.empty.fire=function(){n.unqueued||p()}}n.unqueued++;g.always(function(){g.always(function(){n.unqueued--;
d.queue(a,"fx").length||n.empty.fire()})})}for(e in b){var u=b[e];if(Dc.test(u)){delete b[e];var v=v||"toggle"===u;if(u===(l?"hide":"show"))if("show"===u&&m&&void 0!==m[e])l=!0;else continue;h[e]=m&&m[e]||d.style(a,e)}}if((b=!d.isEmptyObject(b))||!d.isEmptyObject(h)){if(f&&1===a.nodeType){c.overflow=[k.overflow,k.overflowX,k.overflowY];var y=m&&m.display;null==y&&(y=t.get(a,"display"));f=d.css(a,"display");"none"===f&&(y?f=y:(Y([a],!0),y=a.style.display||y,f=d.css(a,"display"),Y([a])));("inline"===
f||"inline-block"===f&&null!=y)&&"none"===d.css(a,"float")&&(b||(g.done(function(){k.display=y}),null==y&&(f=k.display,y="none"===f?"":f)),k.display="inline-block")}c.overflow&&(k.overflow="hidden",g.always(function(){k.overflow=c.overflow[0];k.overflowX=c.overflow[1];k.overflowY=c.overflow[2]}));b=!1;for(e in h)b||(m?"hidden"in m&&(l=m.hidden):m=t.access(a,"fxshow",{display:y}),v&&(m.hidden=!l),l&&Y([a],!0),g.done(function(){l||Y([a]);t.remove(a,"fxshow");for(e in h)d.style(a,e,h[e])})),b=Cb(l?m[e]:
0,e,g),e in m||(m[e]=b.start,l&&(b.end=b.start,b.start=0))}}],prefilter:function(a,b){b?S.prefilters.unshift(a):S.prefilters.push(a)}});d.speed=function(a,b,c){var e=a&&"object"===typeof a?d.extend({},a):{complete:c||!c&&b||p(a)&&a,duration:a,easing:c&&b||b&&!p(b)&&b};d.fx.off?e.duration=0:"number"!==typeof e.duration&&(e.duration=e.duration in d.fx.speeds?d.fx.speeds[e.duration]:d.fx.speeds._default);if(null==e.queue||!0===e.queue)e.queue="fx";e.old=e.complete;e.complete=function(){p(e.old)&&e.old.call(this);
e.queue&&d.dequeue(this,e.queue)};return e};d.fn.extend({fadeTo:function(a,b,c,d){return this.filter(Ha).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,e){var f=d.isEmptyObject(a),g=d.speed(b,c,e);b=function(){var b=S(this,d.extend({},a),g);(f||t.get(this,"finish"))&&b.stop(!0)};b.finish=b;return f||!1===g.queue?this.each(b):this.queue(g.queue,b)},stop:function(a,b,c){var e=function(a){var b=a.stop;delete a.stop;b(c)};"string"!==typeof a&&(c=b,b=a,a=void 0);b&&!1!==
a&&this.queue(a||"fx",[]);return this.each(function(){var b=!0,g=null!=a&&a+"queueHooks",h=d.timers,k=t.get(this);if(g)k[g]&&k[g].stop&&e(k[g]);else for(g in k)k[g]&&k[g].stop&&Ec.test(g)&&e(k[g]);for(g=h.length;g--;)h[g].elem!==this||null!=a&&h[g].queue!==a||(h[g].anim.stop(c),b=!1,h.splice(g,1));!b&&c||d.dequeue(this,a)})},finish:function(a){!1!==a&&(a=a||"fx");return this.each(function(){var b=t.get(this),c=b[a+"queue"];var e=b[a+"queueHooks"];var f=d.timers,g=c?c.length:0;b.finish=!0;d.queue(this,
a,[]);e&&e.stop&&e.stop.call(this,!0);for(e=f.length;e--;)f[e].elem===this&&f[e].queue===a&&(f[e].anim.stop(!0),f.splice(e,1));for(e=0;e<g;e++)c[e]&&c[e].finish&&c[e].finish.call(this);delete b.finish})}});d.each(["toggle","show","hide"],function(a,b){var c=d.fn[b];d.fn[b]=function(a,d,g){return null==a||"boolean"===typeof a?c.apply(this,arguments):this.animate(Ma(b,!0),a,d,g)}});d.each({slideDown:Ma("show"),slideUp:Ma("hide"),slideToggle:Ma("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},
fadeToggle:{opacity:"toggle"}},function(a,b){d.fn[a]=function(a,d,f){return this.animate(b,a,d,f)}});d.timers=[];d.fx.tick=function(){var a=0,b=d.timers;for(va=Date.now();a<b.length;a++){var c=b[a];c()||b[a]!==c||b.splice(a--,1)}b.length||d.fx.stop();va=void 0};d.fx.timer=function(a){d.timers.push(a);d.fx.start()};d.fx.interval=13;d.fx.start=function(){La||(La=!0,Ya())};d.fx.stop=function(){La=null};d.fx.speeds={slow:600,fast:200,_default:400};d.fn.delay=function(a,b){a=d.fx?d.fx.speeds[a]||a:a;return this.queue(b||
"fx",function(b,d){var c=n.setTimeout(b,a);d.stop=function(){n.clearTimeout(c)}})};(function(){var a=u.createElement("input"),b=u.createElement("select").appendChild(u.createElement("option"));a.type="checkbox";v.checkOn=""!==a.value;v.optSelected=b.selected;a=u.createElement("input");a.value="t";a.type="radio";v.radioValue="t"===a.value})();var la=d.expr.attrHandle;d.fn.extend({attr:function(a,b){return y(this,d.attr,a,b,1<arguments.length)},removeAttr:function(a){return this.each(function(){d.removeAttr(this,
a)})}});d.extend({attr:function(a,b,c){var e,f,g=a.nodeType;if(3!==g&&8!==g&&2!==g){if("undefined"===typeof a.getAttribute)return d.prop(a,b,c);1===g&&d.isXMLDoc(a)||(f=d.attrHooks[b.toLowerCase()]||(d.expr.match.bool.test(b)?Fc:void 0));if(void 0!==c){if(null===c){d.removeAttr(a,b);return}if(f&&"set"in f&&void 0!==(e=f.set(a,c,b)))return e;a.setAttribute(b,c+"");return c}if(f&&"get"in f&&null!==(e=f.get(a,b)))return e;e=d.find.attr(a,b);return null==e?void 0:e}},attrHooks:{type:{set:function(a,b){if(!v.radioValue&&
"radio"===b&&R(a,"input")){var c=a.value;a.setAttribute("type",b);c&&(a.value=c);return b}}}},removeAttr:function(a,b){var c,d=0,f=b&&b.match(M);if(f&&1===a.nodeType)for(;c=f[d++];)a.removeAttribute(c)}});var Fc={set:function(a,b,c){!1===b?d.removeAttr(a,c):a.setAttribute(c,c);return c}};d.each(d.expr.match.bool.source.match(/\w+/g),function(a,b){var c=la[b]||d.find.attr;la[b]=function(a,b,d){var e=b.toLowerCase();if(!d){var f=la[e];la[e]=g;var g=null!=c(a,b,d)?e:null;la[e]=f}return g}});var Gc=/^(?:input|select|textarea|button)$/i,
Hc=/^(?:a|area)$/i;d.fn.extend({prop:function(a,b){return y(this,d.prop,a,b,1<arguments.length)},removeProp:function(a){return this.each(function(){delete this[d.propFix[a]||a]})}});d.extend({prop:function(a,b,c){var e,f=a.nodeType;if(3!==f&&8!==f&&2!==f){if(1!==f||!d.isXMLDoc(a)){b=d.propFix[b]||b;var g=d.propHooks[b]}return void 0!==c?g&&"set"in g&&void 0!==(e=g.set(a,c,b))?e:a[b]=c:g&&"get"in g&&null!==(e=g.get(a,b))?e:a[b]}},propHooks:{tabIndex:{get:function(a){var b=d.find.attr(a,"tabindex");
return b?parseInt(b,10):Gc.test(a.nodeName)||Hc.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}});v.optSelected||(d.propHooks.selected={get:function(a){(a=a.parentNode)&&a.parentNode&&a.parentNode.selectedIndex;return null},set:function(a){if(a=a.parentNode)a.selectedIndex,a.parentNode&&a.parentNode.selectedIndex}});d.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "),function(){d.propFix[this.toLowerCase()]=
this});d.fn.extend({addClass:function(a){var b,c,e,f,g=0;if(p(a))return this.each(function(b){d(this).addClass(a.call(this,b,V(this)))});var h=Za(a);if(h.length)for(;b=this[g++];){var k=V(b);if(c=1===b.nodeType&&" "+ea(k)+" "){for(f=0;e=h[f++];)0>c.indexOf(" "+e+" ")&&(c+=e+" ");c=ea(c);k!==c&&b.setAttribute("class",c)}}return this},removeClass:function(a){var b,c,e,f,g=0;if(p(a))return this.each(function(b){d(this).removeClass(a.call(this,b,V(this)))});if(!arguments.length)return this.attr("class",
"");var h=Za(a);if(h.length)for(;b=this[g++];){var k=V(b);if(c=1===b.nodeType&&" "+ea(k)+" "){for(f=0;e=h[f++];)for(;-1<c.indexOf(" "+e+" ");)c=c.replace(" "+e+" "," ");c=ea(c);k!==c&&b.setAttribute("class",c)}}return this},toggleClass:function(a,b){var c=typeof a,e="string"===c||Array.isArray(a);return"boolean"===typeof b&&e?b?this.addClass(a):this.removeClass(a):p(a)?this.each(function(c){d(this).toggleClass(a.call(this,c,V(this),b),b)}):this.each(function(){var b,g;if(e){var h=0;var k=d(this);
for(g=Za(a);b=g[h++];)k.hasClass(b)?k.removeClass(b):k.addClass(b)}else if(void 0===a||"boolean"===c)(b=V(this))&&t.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||!1===a?"":t.get(this,"__className__")||"")})},hasClass:function(a){var b,c=0;for(a=" "+a+" ";b=this[c++];)if(1===b.nodeType&&-1<(" "+ea(V(b))+" ").indexOf(a))return!0;return!1}});var Ic=/\r/g;d.fn.extend({val:function(a){var b,c,e=this[0];if(arguments.length){var f=p(a);return this.each(function(c){1===this.nodeType&&
(c=f?a.call(this,c,d(this).val()):a,null==c?c="":"number"===typeof c?c+="":Array.isArray(c)&&(c=d.map(c,function(a){return null==a?"":a+""})),b=d.valHooks[this.type]||d.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,c,"value")||(this.value=c))})}if(e){if((b=d.valHooks[e.type]||d.valHooks[e.nodeName.toLowerCase()])&&"get"in b&&void 0!==(c=b.get(e,"value")))return c;c=e.value;return"string"===typeof c?c.replace(Ic,""):null==c?"":c}}});d.extend({valHooks:{option:{get:function(a){var b=
d.find.attr(a,"value");return null!=b?b:ea(d.text(a))}},select:{get:function(a){var b=a.options,c=a.selectedIndex,e="select-one"===a.type,f=e?null:[],g=e?c+1:b.length;for(a=0>c?g:e?c:0;a<g;a++){var h=b[a];if(!(!h.selected&&a!==c||h.disabled||h.parentNode.disabled&&R(h.parentNode,"optgroup"))){h=d(h).val();if(e)return h;f.push(h)}}return f},set:function(a,b){for(var c,e,f=a.options,g=d.makeArray(b),h=f.length;h--;)if(e=f[h],e.selected=-1<d.inArray(d.valHooks.option.get(e),g))c=!0;c||(a.selectedIndex=
-1);return g}}}});d.each(["radio","checkbox"],function(){d.valHooks[this]={set:function(a,b){if(Array.isArray(b))return a.checked=-1<d.inArray(d(a).val(),b)}};v.checkOn||(d.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});v.focusin="onfocusin"in n;var Pb=/^(?:focusinfocus|focusoutblur)$/,Qb=function(a){a.stopPropagation()};d.extend(d.event,{trigger:function(a,b,c,e){var f,g,h,k=[c||u],l=Na.call(a,"type")?a.type:a;var m=Na.call(a,"namespace")?a.namespace.split("."):
[];var q=h=f=c=c||u;if(3!==c.nodeType&&8!==c.nodeType&&!Pb.test(l+d.event.triggered)){-1<l.indexOf(".")&&(m=l.split("."),l=m.shift(),m.sort());var r=0>l.indexOf(":")&&"on"+l;a=a[d.expando]?a:new d.Event(l,"object"===typeof a&&a);a.isTrigger=e?2:3;a.namespace=m.join(".");a.rnamespace=a.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;a.result=void 0;a.target||(a.target=c);b=null==b?[a]:d.makeArray(b,[a]);m=d.event.special[l]||{};if(e||!m.trigger||!1!==m.trigger.apply(c,b)){if(!e&&
!m.noBubble&&!na(c)){var v=m.delegateType||l;Pb.test(v+l)||(q=q.parentNode);for(;q;q=q.parentNode)k.push(q),f=q;f===(c.ownerDocument||u)&&k.push(f.defaultView||f.parentWindow||n)}for(f=0;(q=k[f++])&&!a.isPropagationStopped();)h=q,a.type=1<f?v:m.bindType||l,(g=(t.get(q,"events")||{})[a.type]&&t.get(q,"handle"))&&g.apply(q,b),(g=r&&q[r])&&g.apply&&Qa(q)&&(a.result=g.apply(q,b),!1===a.result&&a.preventDefault());a.type=l;e||a.isDefaultPrevented()||m._default&&!1!==m._default.apply(k.pop(),b)||!Qa(c)||
!r||!p(c[l])||na(c)||((f=c[r])&&(c[r]=null),d.event.triggered=l,a.isPropagationStopped()&&h.addEventListener(l,Qb),c[l](),a.isPropagationStopped()&&h.removeEventListener(l,Qb),d.event.triggered=void 0,f&&(c[r]=f));return a.result}}},simulate:function(a,b,c){a=d.extend(new d.Event,c,{type:a,isSimulated:!0});d.event.trigger(a,null,b)}});d.fn.extend({trigger:function(a,b){return this.each(function(){d.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return d.event.trigger(a,
b,c,!0)}});v.focusin||d.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){d.event.simulate(b,a.target,d.event.fix(a))};d.event.special[b]={setup:function(){var d=this.ownerDocument||this,f=t.access(d,b);f||d.addEventListener(a,c,!0);t.access(d,b,(f||0)+1)},teardown:function(){var d=this.ownerDocument||this,f=t.access(d,b)-1;f?t.access(d,b,f):(d.removeEventListener(a,c,!0),t.remove(d,b))}}});var da=n.location,Rb=Date.now(),fb=/\?/;d.parseXML=function(a){if(!a||"string"!==typeof a)return null;
try{var b=(new n.DOMParser).parseFromString(a,"text/xml")}catch(c){b=void 0}b&&!b.getElementsByTagName("parsererror").length||d.error("Invalid XML: "+a);return b};var lc=/\[\]$/,Sb=/\r?\n/g,Jc=/^(?:submit|button|image|reset|file)$/i,Kc=/^(?:input|select|textarea|keygen)/i;d.param=function(a,b){var c,e=[],f=function(a,b){var c=p(b)?b():b;e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(null==c?"":c)};if(null==a)return"";if(Array.isArray(a)||a.jquery&&!d.isPlainObject(a))d.each(a,function(){f(this.name,
this.value)});else for(c in a)$a(c,a[c],b,f);return e.join("&")};d.fn.extend({serialize:function(){return d.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=d.prop(this,"elements");return a?d.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!d(this).is(":disabled")&&Kc.test(this.nodeName)&&!Jc.test(a)&&(this.checked||!Aa.test(a))}).map(function(a,b){var c=d(this).val();return null==c?null:Array.isArray(c)?d.map(c,function(a){return{name:b.name,
value:a.replace(Sb,"\r\n")}}):{name:b.name,value:c.replace(Sb,"\r\n")}}).get()}});var Lc=/%20/g,Mc=/#.*$/,Nc=/([?&])_=[^&]*/,Oc=/^(.*?):[ \t]*([^\r\n]*)$/mg,Pc=/^(?:GET|HEAD)$/,Qc=/^\/\//,Tb={},ab={},Ub="*/".concat("*"),gb=u.createElement("a");gb.href=da.href;d.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:da.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(da.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",
accepts:{"*":Ub,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":d.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?bb(bb(a,d.ajaxSettings),b):bb(d.ajaxSettings,a)},ajaxPrefilter:Db(Tb),ajaxTransport:Db(ab),
ajax:function(a,b){function c(a,b,c,g){var l=b;if(!H){H=!0;h&&n.clearTimeout(h);e=void 0;f=g||"";z.readyState=0<a?4:0;g=200<=a&&300>a||304===a;if(c){var r=m;for(var u=z,w,L,D,G,C=r.contents,A=r.dataTypes;"*"===A[0];)A.shift(),void 0===w&&(w=r.mimeType||u.getResponseHeader("Content-Type"));if(w)for(L in C)if(C[L]&&C[L].test(w)){A.unshift(L);break}if(A[0]in c)D=A[0];else{for(L in c){if(!A[0]||r.converters[L+" "+A[0]]){D=L;break}G||(G=L)}D=D||G}D?(D!==A[0]&&A.unshift(D),r=c[D]):r=void 0}a:{c=m;w=r;L=
z;D=g;var ba;u={};C=c.dataTypes.slice();if(C[1])for(E in c.converters)u[E.toLowerCase()]=c.converters[E];for(G=C.shift();G;){c.responseFields[G]&&(L[c.responseFields[G]]=w);!I&&D&&c.dataFilter&&(w=c.dataFilter(w,c.dataType));var I=G;if(G=C.shift())if("*"===G)G=I;else if("*"!==I&&I!==G){var E=u[I+" "+G]||u["* "+G];if(!E)for(ba in u)if(r=ba.split(" "),r[1]===G&&(E=u[I+" "+r[0]]||u["* "+r[0]])){!0===E?E=u[ba]:!0!==u[ba]&&(G=r[0],C.unshift(r[1]));break}if(!0!==E)if(E&&c["throws"])w=E(w);else try{w=E(w)}catch(qc){r=
{state:"parsererror",error:E?qc:"No conversion from "+I+" to "+G};break a}}}r={state:"success",data:w}}if(g)if(m.ifModified&&((l=z.getResponseHeader("Last-Modified"))&&(d.lastModified[O]=l),(l=z.getResponseHeader("etag"))&&(d.etag[O]=l)),204===a||"HEAD"===m.type)l="nocontent";else if(304===a)l="notmodified";else{l=r.state;var M=r.data;var N=r.error;g=!N}else if(N=l,a||!l)l="error",0>a&&(a=0);z.status=a;z.statusText=(b||l)+"";g?t.resolveWith(q,[M,l,z]):t.rejectWith(q,[z,l,N]);z.statusCode(y);y=void 0;
k&&p.trigger(g?"ajaxSuccess":"ajaxError",[z,m,g?M:N]);v.fireWith(q,[z,l]);k&&(p.trigger("ajaxComplete",[z,m]),--d.active||d.event.trigger("ajaxStop"))}}"object"===typeof a&&(b=a,a=void 0);b=b||{};var e,f,g,h,k,l,m=d.ajaxSetup({},b),q=m.context||m,p=m.context&&(q.nodeType||q.jquery)?d(q):d.event,t=d.Deferred(),v=d.Callbacks("once memory"),y=m.statusCode||{},C={},I={},E="canceled",z={readyState:0,getResponseHeader:function(a){var b;if(H){if(!g)for(g={};b=Oc.exec(f);)g[b[1].toLowerCase()+" "]=(g[b[1].toLowerCase()+
" "]||[]).concat(b[2]);b=g[a.toLowerCase()+" "]}return null==b?null:b.join(", ")},getAllResponseHeaders:function(){return H?f:null},setRequestHeader:function(a,b){null==H&&(a=I[a.toLowerCase()]=I[a.toLowerCase()]||a,C[a]=b);return this},overrideMimeType:function(a){null==H&&(m.mimeType=a);return this},statusCode:function(a){var b;if(a)if(H)z.always(a[z.status]);else for(b in a)y[b]=[y[b],a[b]];return this},abort:function(a){a=a||E;e&&e.abort(a);c(0,a);return this}};t.promise(z);m.url=((a||m.url||
da.href)+"").replace(Qc,da.protocol+"//");m.type=b.method||b.type||m.method||m.type;m.dataTypes=(m.dataType||"*").toLowerCase().match(M)||[""];if(null==m.crossDomain){var A=u.createElement("a");try{A.href=m.url,A.href=A.href,m.crossDomain=gb.protocol+"//"+gb.host!==A.protocol+"//"+A.host}catch(L){m.crossDomain=!0}}m.data&&m.processData&&"string"!==typeof m.data&&(m.data=d.param(m.data,m.traditional));Eb(Tb,m,b,z);if(H)return z;(k=d.event&&m.global)&&0===d.active++&&d.event.trigger("ajaxStart");m.type=
m.type.toUpperCase();m.hasContent=!Pc.test(m.type);var O=m.url.replace(Mc,"");m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(Lc,"+")):(A=m.url.slice(O.length),m.data&&(m.processData||"string"===typeof m.data)&&(O+=(fb.test(O)?"&":"?")+m.data,delete m.data),!1===m.cache&&(O=O.replace(Nc,"$1"),A=(fb.test(O)?"&":"?")+"_="+Rb++ +A),m.url=O+A);m.ifModified&&(d.lastModified[O]&&z.setRequestHeader("If-Modified-Since",d.lastModified[O]),
d.etag[O]&&z.setRequestHeader("If-None-Match",d.etag[O]));(m.data&&m.hasContent&&!1!==m.contentType||b.contentType)&&z.setRequestHeader("Content-Type",m.contentType);z.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+Ub+"; q=0.01":""):m.accepts["*"]);for(l in m.headers)z.setRequestHeader(l,m.headers[l]);if(m.beforeSend&&(!1===m.beforeSend.call(q,z,m)||H))return z.abort();E="abort";v.add(m.complete);z.done(m.success);z.fail(m.error);
if(e=Eb(ab,m,b,z)){z.readyState=1;k&&p.trigger("ajaxSend",[z,m]);if(H)return z;m.async&&0<m.timeout&&(h=n.setTimeout(function(){z.abort("timeout")},m.timeout));try{var H=!1;e.send(C,c)}catch(L){if(H)throw L;c(-1,L)}}else c(-1,"No Transport");return z},getJSON:function(a,b,c){return d.get(a,b,c,"json")},getScript:function(a,b){return d.get(a,void 0,b,"script")}});d.each(["get","post"],function(a,b){d[b]=function(a,e,f,g){p(e)&&(g=g||f,f=e,e=void 0);return d.ajax(d.extend({url:a,type:b,dataType:g,data:e,
success:f},d.isPlainObject(a)&&a))}});d._evalUrl=function(a,b){return d.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(a){d.globalEval(a,b)}})};d.fn.extend({wrapAll:function(a){this[0]&&(p(a)&&(a=a.call(this[0])),a=d(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&a.insertBefore(this[0]),a.map(function(){for(var a=this;a.firstElementChild;)a=a.firstElementChild;return a}).append(this));return this},wrapInner:function(a){return p(a)?
this.each(function(b){d(this).wrapInner(a.call(this,b))}):this.each(function(){var b=d(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p(a);return this.each(function(c){d(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){this.parent(a).not("body").each(function(){d(this).replaceWith(this.childNodes)});return this}});d.expr.pseudos.hidden=function(a){return!d.expr.pseudos.visible(a)};d.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)};
d.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(a){}};var Rc={0:200,1223:204},wa=d.ajaxSettings.xhr();v.cors=!!wa&&"withCredentials"in wa;v.ajax=wa=!!wa;d.ajaxTransport(function(a){var b,c;if(v.cors||wa&&!a.crossDomain)return{send:function(d,f){var e,h=a.xhr();h.open(a.type,a.url,a.async,a.username,a.password);if(a.xhrFields)for(e in a.xhrFields)h[e]=a.xhrFields[e];a.mimeType&&h.overrideMimeType&&h.overrideMimeType(a.mimeType);a.crossDomain||d["X-Requested-With"]||(d["X-Requested-With"]=
"XMLHttpRequest");for(e in d)h.setRequestHeader(e,d[e]);b=function(a){return function(){b&&(b=c=h.onload=h.onerror=h.onabort=h.ontimeout=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!==typeof h.status?f(0,"error"):f(h.status,h.statusText):f(Rc[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!==typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}};h.onload=b();c=h.onerror=h.ontimeout=b("error");void 0!==h.onabort?
h.onabort=c:h.onreadystatechange=function(){4===h.readyState&&n.setTimeout(function(){b&&c()})};b=b("abort");try{h.send(a.hasContent&&a.data||null)}catch(k){if(b)throw k;}},abort:function(){b&&b()}}});d.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)});d.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){d.globalEval(a);return a}}});
d.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1);a.crossDomain&&(a.type="GET")});d.ajaxTransport("script",function(a){if(a.crossDomain||a.scriptAttrs){var b,c;return{send:function(e,f){b=d("<script>").attr(a.scriptAttrs||{}).prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove();c=null;a&&f("error"===a.type?404:200,a.type)});u.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Vb=[],hb=/(=)\?(?=&|$)|\?\?/;d.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=
Vb.pop()||d.expando+"_"+Rb++;this[a]=!0;return a}});d.ajaxPrefilter("json jsonp",function(a,b,c){var e,f=!1!==a.jsonp&&(hb.test(a.url)?"url":"string"===typeof a.data&&0===(a.contentType||"").indexOf("application/x-www-form-urlencoded")&&hb.test(a.data)&&"data");if(f||"jsonp"===a.dataTypes[0]){var g=a.jsonpCallback=p(a.jsonpCallback)?a.jsonpCallback():a.jsonpCallback;f?a[f]=a[f].replace(hb,"$1"+g):!1!==a.jsonp&&(a.url+=(fb.test(a.url)?"&":"?")+a.jsonp+"="+g);a.converters["script json"]=function(){e||
d.error(g+" was not called");return e[0]};a.dataTypes[0]="json";var h=n[g];n[g]=function(){e=arguments};c.always(function(){void 0===h?d(n).removeProp(g):n[g]=h;a[g]&&(a.jsonpCallback=b.jsonpCallback,Vb.push(g));e&&p(h)&&h(e[0]);e=h=void 0});return"script"}});v.createHTMLDocument=function(){var a=u.implementation.createHTMLDocument("").body;a.innerHTML="<form></form><form></form>";return 2===a.childNodes.length}();d.parseHTML=function(a,b,c){if("string"!==typeof a)return[];"boolean"===typeof b&&(c=
b,b=!1);if(!b)if(v.createHTMLDocument){b=u.implementation.createHTMLDocument("");var e=b.createElement("base");e.href=u.location.href;b.head.appendChild(e)}else b=u;e=Jb.exec(a);c=!c&&[];if(e)return[b.createElement(e[1])];e=ob([a],b,c);c&&c.length&&d(c).remove();return d.merge([],e.childNodes)};d.fn.load=function(a,b,c){var e,f,g=this,h=a.indexOf(" ");if(-1<h){var k=ea(a.slice(h));a=a.slice(0,h)}p(b)?(c=b,b=void 0):b&&"object"===typeof b&&(e="POST");0<g.length&&d.ajax({url:a,type:e||"GET",dataType:"html",
data:b}).done(function(a){f=arguments;g.html(k?d("<div>").append(d.parseHTML(a)).find(k):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})});return this};d.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){d.fn[b]=function(a){return this.on(b,a)}});d.expr.pseudos.animated=function(a){return d.grep(d.timers,function(b){return a===b.elem}).length};d.offset={setOffset:function(a,b,c){var e=d.css(a,"position"),f=d(a),g=
{};"static"===e&&(a.style.position="relative");var h=f.offset();var k=d.css(a,"top");var l=d.css(a,"left");("absolute"===e||"fixed"===e)&&-1<(k+l).indexOf("auto")?(l=f.position(),k=l.top,l=l.left):(k=parseFloat(k)||0,l=parseFloat(l)||0);p(b)&&(b=b.call(a,c,d.extend({},h)));null!=b.top&&(g.top=b.top-h.top+k);null!=b.left&&(g.left=b.left-h.left+l);"using"in b?b.using.call(a,g):f.css(g)}};d.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){d.offset.setOffset(this,
a,b)});var b;if(b=this[0]){if(!b.getClientRects().length)return{top:0,left:0};var c=b.getBoundingClientRect();b=b.ownerDocument.defaultView;return{top:c.top+b.pageYOffset,left:c.left+b.pageXOffset}}},position:function(){if(this[0]){var a,b=this[0],c={top:0,left:0};if("fixed"===d.css(b,"position"))var e=b.getBoundingClientRect();else{e=this.offset();var f=b.ownerDocument;for(a=b.offsetParent||f.documentElement;a&&(a===f.body||a===f.documentElement)&&"static"===d.css(a,"position");)a=a.parentNode;a&&
a!==b&&1===a.nodeType&&(c=d(a).offset(),c.top+=d.css(a,"borderTopWidth",!0),c.left+=d.css(a,"borderLeftWidth",!0))}return{top:e.top-c.top-d.css(b,"marginTop",!0),left:e.left-c.left-d.css(b,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent;a&&"static"===d.css(a,"position");)a=a.offsetParent;return a||za})}});d.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;d.fn[a]=function(d){return y(this,function(a,d,
e){if(na(a))var f=a;else 9===a.nodeType&&(f=a.defaultView);if(void 0===e)return f?f[b]:a[d];f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e},a,d,arguments.length)}});d.each(["top","left"],function(a,b){d.cssHooks[b]=vb(v.pixelPosition,function(a,e){if(e)return e=ua(a,b),Va.test(e)?d(a).position()[b]+"px":e})});d.each({Height:"height",Width:"width"},function(a,b){d.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,e){d.fn[e]=function(f,g){var h=arguments.length&&(c||"boolean"!==typeof f),
k=c||(!0===f||!0===g?"margin":"border");return y(this,function(b,c,f){return na(b)?0===e.indexOf("outer")?b["inner"+a]:b.document.documentElement["client"+a]:9===b.nodeType?(c=b.documentElement,Math.max(b.body["scroll"+a],c["scroll"+a],b.body["offset"+a],c["offset"+a],c["client"+a])):void 0===f?d.css(b,c,k):d.style(b,c,f,k)},b,h?f:void 0,h)}})});d.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
function(a,b){d.fn[b]=function(a,d){return 0<arguments.length?this.on(b,null,a,d):this.trigger(b)}});d.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});d.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});d.proxy=function(a,b){if("string"===typeof b){var c=a[b];b=a;a=
c}if(p(a)){var e=Z.call(arguments,2);c=function(){return a.apply(b||this,e.concat(Z.call(arguments)))};c.guid=a.guid=a.guid||d.guid++;return c}};d.holdReady=function(a){a?d.readyWait++:d.ready(!0)};d.isArray=Array.isArray;d.parseJSON=JSON.parse;d.nodeName=R;d.isFunction=p;d.isWindow=na;d.camelCase=T;d.type=ma;d.now=Date.now;d.isNumeric=function(a){var b=d.type(a);return("number"===b||"string"===b)&&!isNaN(a-parseFloat(a))};"function"===typeof define&&define.amd&&define("jquery",[],function(){return d});
var Sc=n.jQuery,Tc=n.$;d.noConflict=function(a){n.$===d&&(n.$=Tc);a&&n.jQuery===d&&(n.jQuery=Sc);return d};C||(n.jQuery=n.$=d);return d});</script><script>var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
var dir={path:"",sort:"name",sortAsc:!0,poppingHistory:!1,pendingRequests:0,pattern:"",replace:"",hotkeys:{"ctrl+shift+c":function(){1>this.getSelectedSubdirs().length?$("#files-form input[value='Copy']").click():1>this.getSelectedFiles().length?$("#subdirs-form input[value='Copy']").click():"subdirs"==dir.lastInteraction?$("#subdirs-form input[value='Copy']").click():$("#files-form input[value='Copy']").click()},"ctrl+shift+d":function(){1>this.getSelectedSubdirs().length?$("#files-form input[value='Delete']").click():
1>this.getSelectedFiles().length?$("#subdirs-form input[value='Delete']").click():"subdirs"==dir.lastInteraction?$("#subdirs-form input[value='Delete']").click():$("#files-form input[value='Delete']").click()},"ctrl+shift+f":function(){$("#filter").focus()},"ctrl+shift+k":function(){$("#subdirs-form input[value='Kill']").click()},"ctrl+shift+n":function(){1>this.getSelectedSubdirs().length?$("#files-form input[value='New']").click():1>this.getSelectedFiles().length?$("#subdirs-form input[value='New']").click():
"subdirs"==dir.lastInteraction?$("#subdirs-form input[value='New']").click():$("#files-form input[value='New']").click()},"ctrl+shif+o":function(){$("#files-form input[value='Edit']").click()},"ctrl+shift+s":function(){$("li.search").click()},"ctrl+shift+x":function(){1>this.getSelectedSubdirs().length?$("#files-form input[value='Move']").click():1>this.getSelectedFiles().length?$("#subdirs-form input[value='Move']").click():"subdirs"==dir.lastInteraction?$("#subdirs-form input[value='Move']").click():
$("#files-form input[value='Move']").click()},escape:function(){dir.resetUI()}},refresh:function(a){return this.baseURLPath?this.execute("refresh",{path:a}):this.execute("get_config",{},null,function(a){for(var b in a)this[b]=a[b];$("#max-file-size").val(this.maxUploadSize)}.bind(this)).done(function(){this.execute("refresh",{path:a})}.bind(this))},update:function(a){if("undefined"!==typeof a){if(!a.path||!a.subdirs||!a.files){this.error("Could not update directory information from server response");
return}this.path=a.path;this.subdirs=a.subdirs;this.files=a.files}this.poppingHistory||(""==location.hash||decodeURIComponent(location.hash.substr(1))==this.path?history.replaceState({path:this.path},"PFM File Manager - "+this.path,"#"+encodeURIComponent(this.path)):history.pushState({path:this.path},"PFM File Manager - "+this.path,"#"+encodeURIComponent(this.path)));this.poppingHistory=!1;this.sortFiles(this.sort,this.sortAsc);$("input.path").val(this.path);a=this.path.split(this.separator);for(var b=
$("span.path").empty(),c=0;c<a.length-1;c++)b.append($("<span>").addClass("nav").text(a[c]+" "+this.separator));b.append($("<span>").addClass("nav").text(a[a.length-1]));$("#subdirs").empty();this.path!=dir.separator&&$("#subdirs").append($("<tr class='subdir'><td class='subdir'>..</td></tr>"));this.subdirs.forEach(function(a){$("#subdirs").append($("<tr class='subdir'>").append($("<td class='subdir'>").text(a).attr("title",a)))});$("#check-all").prop("checked",!1);$("#files").empty();var d=this.path==
dir.separator?"":this.path;this.files.forEach(function(a){var b=$("<td class='col-checked'>").append($('<input class="files" type="checkbox" value="'+a.name+'">')),c=$("<td class='col-name'>").append($('<a href="'+this.baseURLPath+d+"/"+a.name+'" target="_BLANK" title="'+a.name+'">'+a.name+"</a>")),e=$("<td class='col-size'>").text(dir.formatSize(a.size)),g=$("<td class='col-owner'>").text(a.owner),h=$("<td class='col-group'>").text(a.group),k=$("<td class='col-permissions'>").text(dir.formatPerms(a.permissions)),
l=$("<td class='col-created'>").text(dir.formatDate(a.created));a=$("<td class='col-modified'>").text(dir.formatDate(a.modified));b=$("<tr class='file'>").append(b).append(c).append(e).append(g).append(h).append(k).append(l).append(a);$("#files").append(b)}.bind(this));$("th.files").removeClass("sort_asc sort_desc");$("th.files:contains('"+this.sort.substr(1)+"')").addClass(dir.sortAsc?"sort_asc":"sort_desc");this.toggleColumns()},sortFiles:function(a,b){switch(a){default:case "name":this.files.sort(function(a,
d){return b?a.name.localeCompare(d.name):d.name.localeCompare(a.name)});break;case "size":this.files.sort(function(a,d){return b?a.size-d.size:d.size-a.size});break;case "owner":this.files.sort(function(a,d){return b?a.owner.localeCompare(d.owner):d.owner.localeCompare(a.owner)});break;case "group":this.files.sort(function(a,d){return b?a.group.localeCompare(d.group):d.group.localeCompare(a.group)});break;case "permissions":this.files.sort(function(a,d){return b?a.permissions.localeCompare(d.permissions):
d.permissions.localeCompare(a.permissions)});break;case "created":this.files.sort(function(a,d){return b?a.created-d.created:d.created-a.created});break;case "modified":this.files.sort(function(a,d){return b?a.modified-d.modified:d.modified-a.modified})}},toggleColumns:function(){$("#filecolumns-menu input").each(function(){$(".col-"+this.id.substr(6)).toggleClass("hidden",!this.checked)});this.saveSettings()},filter:function(a){$("tr.file, tr.subdir").hide();$("td.col-name").filter(function(){return $(this).find("a").text().includes(a.toLowerCase())}).parent().show();
$("td.subdir").filter(function(){return $(this).text().toLowerCase().includes(a.toLowerCase())}).parent().show();$("td.subdir:contains('..')").parent().show()},isFile:function(a){return this.files.map(function(a){return a.name}).includes(a)},isDir:function(a){return this.subdirs.includes(a)},makeDir:function(a){if(null!=a)if(""==a||a.includes(dir.separator))this.error("Invalid directory name: "+a);else if(this.isDir(a))this.error('Directory "'+a+'" already exists');else return this.execute("make_dir",
{name:a},"Created directory "+a)},removeDirs:function(a){if(!(1>a.length)){for(var b=0;b<a.length;b++)if(!this.subdirs.includes(a[b])){this.error('Directory "'+a[b]+'" does not exist');return}plural=1<a.length?"ies":"y";return this.execute("remove_dirs",{"names[]":a},"Removed "+a.length+" director"+plural)}},renameDir:function(a,b){if(null!=b)if(this.isDir(a))if(""==b||b.includes(dir.separator))this.error("Invalid directory name: "+b);else return this.isDir(b)&&this.error('Directory "'+b+'" already exists'),
this.execute("rename",{from:a,to:b},"Renamed "+a+" to "+b);else this.error('Directory "'+a+'" does not exist')},copyDirs:function(a,b){if(!(1>a.length)){for(var c=0;c<a.length;c++)if(!this.isDir(a[c])){this.error('Subdirectory "'+a[c]+'" does not exist');return}plural=1<a.length?"ies":"y";return this.execute("copy",{"names[]":a,to:b},"Copied "+a.length+" director"+plural+" to "+b)}},moveDirs:function(a,b){if(!(1>a.length)){for(var c=0;c<a.length;c++)if(!this.isDir(a[c])){this.error('Subdirectory "'+
a[c]+'" does not exist');return}plural=1<a.length?"ies":"y";return this.execute("move",{"names[]":a,to:b},"Moved "+a.length+" director"+plural+" to "+b)}},killDirs:function(a){if(!(1>a.length)){for(var b=0;b<a.length;b++)if(!this.isDir(a[b])){this.error('Directory "'+a[b]+'" does not exist');return}plural=1<a.length?"ies":"y";return this.execute("kill_dirs",{"names[]":a},"Killed "+a.length+" director"+plural)}},getSelectedSubdirs:function(){return $("tr.subdir.selected:not(:contains('..'))").map(function(){return $(this).text()}).toArray()},
duplicate:function(a,b){if(null!=b)if(this.isFile(a))if(""==b||b.includes(dir.separator))this.error("Invalid name: "+b);else if(this.isFile(b))this.error('File "'+b+'" already exists');else return this.execute("duplicate",{from:a,to:b},"Duplicated "+a);else this.error('File "'+a+'" does not exist')},regexRenameTest:function(a,b){return this.execute("regex_rename_test",{pattern:a,replace:b},null,function(c){this.pattern=a;this.replace=b;this.renameCount=c.renames.length;this.showRegexRenames(c.renames)}.bind(this))},
regexRename:function(){return this.execute("regex_rename",{pattern:this.pattern,replace:this.replace},"Renamed "+this.renameCount+" file"+(1<this.renameCount?"s":"")).done(function(){this.replace=this.pattern="";this.renameCount=0}.bind(this))},"delete":function(a){if(null!=a){for(var b=0;b<a.length;b++)if(!this.isFile(a[b])){this.error('File "'+a[b]+'" does not exist');return}return this.execute("delete",{"names[]":a},"Deleted "+a.length+" file"+(1<a.length?"s":""))}},moveFiles:function(a,b){if(!(1>
a.length)){for(var c=0;c<a.length;c++)if(!this.isFile(a[c])){this.error('File "'+a[c]+'" does not exist');return}return this.execute("move",{"names[]":a,to:b},"Moved "+a.length+" file"+(1<a.length?"s":"")+(" to "+b))}},copyFiles:function(a,b){if(!(1>a.length)){for(var c=0;c<a.length;c++)if(!this.isFile(a[c])){this.error('File "'+a[c]+'" does not exist');return}return this.execute("copy",{"names[]":a,to:b},"Copied "+a.length+" file"+(1<a.length?"s":"")+(" to "+b))}},renameFile:function(a,b){if(null!=
b)if(this.isFile(a))if(""==b||b.includes(dir.separator))this.error("Invalid file name: "+b);else if(this.isFile(b))this.error('File "'+b+'" already exists');else return this.execute("rename",{from:a,to:b},"Renamed "+a+" to "+b);else this.error('File "'+a+'" does not exist')},newFile:function(a){if(""==a||a.includes(dir.separator))this.error("Invalid file name: "+a);else if(this.isFile(a))this.error('File "'+a+'" already exists');else return this.execute("new_file",{name:a},"Created file "+a)},editFile:function(a){if(this.isFile(a))return this.execute("get_contents",
{name:a},null,function(b){this.openFile=a;$("#edit").val(b.contents);$("#edit-box").show()}.bind(this));this.error('Could not find file "'+file+'"')},saveFile:function(){return this.execute("put_contents",{name:this.openFile,contents:$("#edit").val()},"Saved "+this.openFile)},search:function(a,b,c){return this.execute("search",{query:a,depth:b,regex:c},null,function(b){1>b.results.length?this.toast("No results found for "+a):($("#search-results").empty(),b.results.forEach(function(a){var b=$("<a href='"+
this.baseURLPath+a+"' target='_BLANK' title='"+this.baseURLPath+a+"'>"+a+"</a>"),c=a.split(dir.separator);a=c.slice(0,-1).join(dir.separator);c=c.reverse()[0];a=$('<a onclick="'+("window.dir.refresh('"+a+"').done(function() { window.dir.selectFile('"+c+"'); window.dir.resetUI()})")+"\" class='jumpto'>Jump to</a>");$("#search-results").append($("<tr>").append($("<td>").append(b)).append($("<td>").append(a)))}.bind(this)),$("div.modal.search-results").show(),$("#search-results-list").scrollTop(0))}.bind(this))},
download:function(a){if("files"==this.lastInteraction){var b=0;a.forEach(function(a){b+=dir.files.filter(function(b){return b.name==a})[0].size});if(!(1<a.length&&536870912<b)||confirm("Total combined file size is larger than 500 MiB and may take a long time to zip. Continue anyway?"))if(1073741824<b){var c="?download&path="+encodeURIComponent(this.path);a.forEach(function(a){c+="&names[]="+encodeURIComponent(a)});window.location=c}else this.download_wprogress(a)}else{var d=this.getSelectedSubdirs(),
e=0;Promise.all(d.map(function(a){return this.execute("size",{name:a},!1,function(a){a.size&&(e+=a.size)})}.bind(this))).then(function(){if(!(536870912<e)||confirm("Total combined file size is larger than 500 MiB and may take a long time to zip. Continue anyway?"))if(1073741824<b){var c="?download&path="+encodeURIComponent(this.path);a.forEach(function(a){c+="&names[]="+encodeURIComponent(a)});window.location=c}else this.download_wprogress(a)}.bind(this))}},download_wprogress:function(a){if($("#dl-progress:visible").length)return this.error("Download already in progress"),
!1;$("#dl-progress").show();filename=1<a.length||"subdirs"==this.lastInteraction?"files.zip":a[0];$.ajax({url:"?download",method:"POST",data:{path:this.path,names:a},dataType:!1,xhr:function(){var a=$.ajaxSettings.xhr();a.responseType="arraybuffer";a.addEventListener("progress",function(a){if(a.lengthComputable){var b=Math.round(a.loaded/a.total*100);a=dir.formatSize(a.loaded,!0)+"/"+dir.formatSize(a.total,!0);$("#dl-progress-bar").css("width",b+"%");$("#dl-progress-text").text(a)}});return a},success:function(a){$("#dl-progress").hide();
$("#dl-progress-bar").css("width","0");$("#dl-progress-text").html("&nbsp;");var b=new Uint8Array(a);if(123==b[0]&&34==b[1]&&200>b.length){b=decodeURIComponent(escape(String.fromCharCode.apply(null,Array.prototype.slice.apply(b))));try{var d=JSON.parse(b);if(!1===d.success&&d.error){dir.error(d.error);return}}catch(m){}}if(null!=a&&navigator.msSaveBlob)return navigator.msSaveBlob(new Blob([a],{type:type}),name);var e=$("<a style='display: none;'/>");a=new Blob([a],{type:"application/octet-stream"});
var f=window.URL.createObjectURL(a);e.attr("href",f);e.attr("download",filename);$("body").append(e);e[0].click();setTimeout(function(){window.URL.revokeObjectURL(f);e.remove()},0)},error:function(a,c,d){$("#dl-progress").hide();$("#dl-progress-bar").css("width","0");$("#dl-progress-text").html("&nbsp;");dir.ajaxError(a,c,d)}});this.execute("is_logged_in",{},null,function(){})},upload:function(){var a=$("#upload")[0].files.length,b=new FormData($("#upload-form")[0]);b.set("path",this.path);this.uploadPath=
this.path;$("#ul-progress").show();$.ajax({url:"?upload",method:"POST",data:b,contentType:!1,processData:!1,xhr:function(){var a=$.ajaxSettings.xhr();a.upload&&a.upload.addEventListener("progress",function(a){if(a.lengthComputable){var b=Math.round(a.loaded/a.total*100);a=dir.formatSize(a.loaded,!0)+"/"+dir.formatSize(a.total,!0);$("#ul-progress-bar").css("width",b+"%");$("#ul-progress-text").text(a)}});return a},success:function(b){$("#ul-progress").hide();$("#ul-progress-bar").css("width","0");
$("#ul-progress-text").html("&nbsp;");"undefined"==typeof b||b.error||!b.success?(this.error(b.error?b.error:"An unknown error occurred"),b.path&&b.subdirs&&b.files&&this.path==this.uploadPath&&this.update(b)):(this.path==this.uploadPath&&this.update(b),this.toast("Uploaded "+a+" file"+(1<a?"s":"")+" to "+this.uploadPath));this.uploadPath=""}.bind(this),error:function(a,b,e){$("#ul-progress").hide();$("#ul-progress-bar").css("width","0");$("#ul-progress-text").html("&nbsp;");this.uploadPath="";this.ajaxError(a,
b,e)}.bind(this)});this.execute("is_logged_in",{},null,function(){})},toast:function(a){a=$("#toast:visible").length?a+"\n"+$("#toast").text():a;$("#toast").text(a).fadeIn();clearTimeout(this.toastTimeout);this.toastTimeout=setTimeout(function(){$("#toast").fadeOut()},3E3)},error:function(a){var b=$("#error:visible").length?a+"\n"+$("#error").text():a;$("#error").text(b).fadeIn();clearTimeout(this.errorTimeout);this.errorTimeout=setTimeout(function(){$("#error").fadeOut()},3E3);"Not logged in"==a&&
$("#logout").click()},clearErrors:function(){$("#error").fadeOut()},startIndicator:function(){0==this.pendingRequests&&(this.indicatorInterval=setInterval(this.indicator,1E3));this.pendingRequests++},clearIndicator:function(){this.pendingRequests--;0==this.pendingRequests&&(clearInterval(this.indicatorInterval),$("div.title").text("PFM File Manager"))},indicator:function(){var a=$("div.title").text();"...PFM File Manager..."==a?$("div.title").text("PFM File Manager"):$("div.title").text("."+a+".")},
clear:function(){$("input.path").val("");$("#subdirs").empty();$("#files").empty();$("#search-results").empty();$("#dir-select").empty();$("#pattern").val("");$("#replace").val("");$("#edit").val("");$("#error").text("");$("#toast").text("");this.clearIndicator()},formatSize:function(a,b){var c=0==a?0:Math.floor(Math.log(a)/Math.log(1024));return((void 0===b?0:b)?(a/Math.pow(1024,c)).toFixed(2):1*(a/Math.pow(1024,c)).toFixed(2))+" "+["B","KiB","MiB","GiB","TiB"][c]},formatPerms:function(a){return a},
formatDate:function(a){return(new Date(1E3*a)).toISOString().substr(0,19).replace("T"," ")},getSelectedFiles:function(){return $("input.files:checked").map(function(){return $(this).val()}).toArray()},selectFile:function(a){var b=$("td.col-name a").filter(function(){return $(this).text()===a}).parents("tr");b.addClass("selected");b.find("input[type='checkbox']").prop("checked",!0)},showRegexRenames:function(a){$("#regex-rename-form input[type!='text']").hide();$("#regex-rename-form input.confirm").show();
$("#pattern").prop("disabled",!0).prop("autocomplete","off");$("#replace").prop("disabled",!0).prop("autocomplete","off");a.forEach(function(a){$("td.col-name").filter(function(){return $(this).text()===a.from}).append($("<span><br />&emsp;&#x27A5; "+a.to+"</span>"))})},clearRegexRenames:function(){$("td.col-name > span").remove();$("#regex-rename-form input[type!='text']").hide();$("#regex-rename-form input.rename").show();$("#pattern").prop("disabled",!1).prop("autocomplete","on");$("#replace").prop("disabled",
!1).prop("autocomplete","on");this.replace=this.pattern=""},populateDirSelect:function(){var a="";"file"==dir.dirSelectType?"copy"==$("#files-action").val()?a="Select destination for file copy":"move"==$("#files-action").val()&&(a="Select destination for file move"):"dir"==dir.dirSelectType&&("copy"==$("#subdirs-action").val()?a="Select destination for subdirectory copy":"move"==$("#subdirs-action").val()&&(a="Select destination for subdirectory move"));$("div.modal.dir-select th").text(a);$("#dir-select").empty();
$("#dir-select").append($("<tr>").append($("<td>").css("text-indent","0rem").text(dir.separator).append($("<input type='hidden' value='"+dir.separator+"'>"))));this.selectDir($("#dir-select tr"));$("div.modal.dir-select").show()},selectDir:function(a){$("#dir-select .selected").removeClass("selected");a.addClass("selected");if(!a.hasClass("expanded")){a.addClass("expanded");var b=a.find("input").val();return this.execute("get_subdirs",{path:b},null,function(c){if(c.path!=b)this.error("Received server response for different path than requested");
else if(0<c.subdirs.length){b==dir.separator&&(b="");var d=3*b.split(dir.separator).length;c.subdirs.reverse().forEach(function(c){a.after($("<tr>").append($("<td>").css("text-indent",d+"rem").text(c).append("<input type='hidden' value='"+b+dir.separator+c+"'>")))})}})}},getSelectedDir:function(){return $("#dir-select tr.selected input").val()},resetUI:function(){this.clearRegexRenames();$("div.toast").hide();$("div.ribbon").hide();$("ul.ribbon li.selected").removeClass("selected");$("div.modal").hide();
$(".contextmenu").hide();$("#filter").val("");this.filter("");$("#filter").blur()},loadSettings:function(){localStorage&&$(".setting").each(function(){if(0<this.id.length){var a=localStorage.getItem(this.id);if(null!==a)switch(a){case "true":case "false":this.checked="true"==a;break;default:$(this).val(a)}}})},saveSettings:function(){localStorage&&$(".setting").each(function(){if(0<this.id.length){var a="checkbox"==$(this).attr("type")?$(this).prop("checked"):$(this).val();localStorage.setItem(this.id,
a)}})},hotkey:function(a){var b="";window.ctrl&&(b+="ctrl+");window.shift&&(b+="shift+");window.alt&&(b+="alt+");var c=a.which;switch(c){case 8:b+="backspace";break;case 9:b+="tab";break;case 13:b+="enter";break;case 27:b+="escape";break;case 32:b+="space";break;default:91>c&&64<c&&(b+="abcdefghijklmnopqrstuvwxyz"[c-65])}this.hotkeys[b]&&(this.hotkeys[b].call(this),a.preventDefault())},execute:function(a,b,c,d){this.startIndicator();"undefined"==typeof b.path&&(b.path=this.path);return $.post({url:"?"+
a,data:b,dataType:"json",success:function(a){"undefined"==typeof a||a.error||!a.success?(this.error(a.error?a.error:"An unknown error occurred"),a.path&&a.subdirs&&a.files&&this.update(a)):(d?d(a):this.update(a),c&&this.toast(c))}.bind(this),error:dir.ajaxError.bind(this),complete:function(){this.clearIndicator()}.bind(this)})},ajaxError:function(a,b,c){switch(b){case "timeout":this.error("Network connection timed out");break;case "abort":this.error("Network connection aborted");break;case "error":this.error("Network esponse error: "+
c);break;case "parsererror":this.error("Received malformed network response");break;default:this.error("Unknown network error")}}};
$(function(){$("#header").hide();$("#manager").hide();$.post({url:"?is_logged_in",dataType:"json",success:function(a){a.success?(dir.loadSettings(),null!==history.state?dir.refresh(history.state.path):location.hash?dir.refresh(decodeURIComponent(location.hash.substr(1))):dir.refresh(""),$("#header").show(),$("#manager").show()):($("#login").show(),$("#password").focus())}});$("#login-form").submit(function(a){$.post({url:"?login",data:{username:"test",password:$("#password").val()},dataType:"json",
success:function(a){a.error||!a.success?$("#login-errors").text(a.error).show():($("#login-errors").text("").hide(),$("#login").hide(),dir.loadSettings(),dir.refresh("").done(function(){$("#header").show();$("#manager").show()}))}});$("#password").val("");a.preventDefault()});$("#logout").click(function(a){$.post({url:"?logout",dataType:"json",success:function(a){a.success?(dir.resetUI(),dir.clear(),$("#header").hide(),$("#manager").hide(),$("#login").show()):dir.error("An unknown error occurred while attempting to log out")}});
a.preventDefault()});$("#subdirs-form > input[type='submit']").click(function(a){$("#subdirs-action").val(this.value.toLowerCase())});$("#subdirs-form").submit(function(a){dir.resetUI();switch($("#subdirs-action").val()){case "go":var b=dir.getSelectedSubdirs();1==b.length&&(dir.resetUI(),dir.refresh(dir.path+dir.separator+b[0]));break;case "up":dir.refresh($("input.path").val().split(dir.separator).slice(0,-1).join(dir.separator));break;case "new":b=prompt("Enter new directory name:");null!==b&&
dir.makeDir(b);break;case "delete":b=dir.getSelectedSubdirs();var c=b.length;0<b.length&&confirm("Do you really want to delete "+c+" director"+(1<c?"ies":"y")+"? This cannot be undone")&&dir.removeDirs(b);break;case "rename":b=dir.getSelectedSubdirs();0==b.length?dir.error("No directory selected for rename"):1<b.length?dir.error("Only one directory may be renamed at a a time"):dir.renameDir(b[0],prompt("Enter new directory name:"));break;case "move":case "copy":1>dir.getSelectedSubdirs().length?dir.error("No subdirectories selected"):
(dir.dirSelectType="dir",dir.populateDirSelect());break;case "kill":b=dir.getSelectedSubdirs();c=b.length;0<b.length&&confirm("Do you really want to kill "+c+" director"+(1<c?"ies":"y")+"? This cannot be undone")&&dir.killDirs(b);break;case "download":b=dir.getSelectedSubdirs();1>b.length?dir.error("No subdirectories selected for download"):dir.download(dir.getSelectedSubdirs());break;case "select all":1>=$("tr.subdir").length-$("tr.subdir.selected").length?$("tr.subdir").removeClass("selected"):
$("tr.subdir").addClass("selected"),$("td.subdir:contains('..')").parent().removeClass("selected")}a.preventDefault()});$("#files-form > input[type='submit']").click(function(a){$("#files-action").val(this.value.toLowerCase())});$("#files-form").submit(function(a){dir.resetUI();switch($("#files-action").val()){case "delete":var b=dir.getSelectedFiles();1>b.length?dir.error("No files selected for deletion"):confirm("Do you really want to delete "+b.length+" files? This cannot be undone")&&dir["delete"](b);
break;case "rename":b=dir.getSelectedFiles();1>b.length?dir.error("No file selected for rename"):1!=b.length?dir.error("Only one file may be renamed at a time"):dir.renameFile(b[0],prompt("Enter new file name:"));break;case "duplicate":b=dir.getSelectedFiles();1>b.length?dir.error("No file selected for duplication"):1!=b.length?dir.error("Only one file may be duplicated at a time"):dir.duplicate(b[0],prompt("Enter duplicate file name:"));break;case "regex rename":$("div.ribbon.regex-rename").show();
$("#pattern").focus();break;case "kill":b=$("#subdirs").val().length;0<b&&confirm("Do you really want to kill "+b+" director"+(1<b?"ies":"y")+"? This cannot be undone.")&&dir.killDirs($("#subdirs").val());break;case "new":b=prompt("Enter new file name:");null!==b&&dir.newFile(b);break;case "edit":b=dir.getSelectedFiles();1<b.length?dir.error("Only one file may be edited at a time"):dir.openFile&&""!=dir.openFile||dir.editFile(b[0]);break;case "download":b=dir.getSelectedFiles();1>b.length?dir.error("No files selected for download"):
dir.download(b);break;case "upload":$("div.ribbon.upload").show();break;case "move":case "copy":1>dir.getSelectedFiles().length?dir.error("No files selected"):(dir.dirSelectType="file",dir.populateDirSelect())}a.preventDefault()});$("#edit-form > input[type='submit']").click(function(a){$("#edit-action").val(this.value.toLowerCase())});$("#edit-form").submit(function(a){dir.resetUI();switch($("#edit-action").val()){case "save":dir.saveFile();break;case "save & close":dir.saveFile().done(function(){dir.openFile=
"";$("#edit").val("");$("#edit-box").hide()});break;case "close":dir.openFile="",$("#edit").val(""),$("#edit-box").hide()}a.preventDefault()});$("#edit").keydown(function(a){if(9==a.which){a.preventDefault();a=this.selectionStart;var b=this.selectionEnd;b=$(this).val().substring(0,a)+"\t"+$(this).val().substring(b);$(this).val(b);this.selectionStart=this.selectionEnd=a+1}});$("#filter").keyup(function(){dir.filter($("#filter").val())});$("#search-form").submit(function(a){dir.saveSettings();""!=$("#search-query").val()&&
(dir.resetUI(),dir.search($("#search-query").val(),$("#search-depth").val(),$("#search-regex").prop("checked")));a.preventDefault()});$("#search-results-close").click(function(){$("div.search-results").hide()});$("#regex-rename-form").submit(function(a){dir.pattern||dir.replace||!$("#pattern").val()?(dir.regexRename(),dir.resetUI()):dir.regexRenameTest($("#pattern").val(),$("#replace").val())});$("#regex-rename-clear").click(function(a){dir.clearRegexRenames()});$("thead.files").contextmenu(function(a){dir.resetUI();
$("#filecolumns-menu").css({top:a.pageY,left:a.pageX}).show();return!1});$("#error").click(function(a){$("#error").hide()});$("#toast").click(function(a){$("#toast").hide()});$("th.files").click(function(a){a=$(a.target).text().toLowerCase().trim();dir.sortAsc=dir.sort==a?!dir.sortAsc:!0;dir.sort=a;dir.update()});$("#dir-select-select").click(function(a){"file"==dir.dirSelectType?"copy"==$("#files-action").val()?dir.copyFiles(dir.getSelectedFiles(),dir.getSelectedDir()):"move"==$("#files-action").val()&&
dir.moveFiles(dir.getSelectedFiles(),dir.getSelectedDir()):"dir"==dir.dirSelectType&&("copy"==$("#subdirs-action").val()?dir.copyDirs(dir.getSelectedSubdirs(),dir.getSelectedDir()):"move"==$("#subdirs-action").val()&&dir.moveDirs(dir.getSelectedSubdirs(),dir.getSelectedDir()));$("div.modal.dir-select").hide()});$("#dir-select-cancel").click(function(a){$("div.modal.dir-select").hide()});$(".contextmenu").contextmenu(function(a){a.preventDefault()});$(".column-sel").change(function(){dir.toggleColumns()});
$("body").keyup(function(a){switch(a.which){case 16:window.shift=!1;break;case 17:window.ctrl=!1;break;case 18:window.alt=!1}});$("body").keydown(function(a){switch(a.which){case 16:window.shift=!0;break;case 17:window.ctrl=!0;break;case 18:window.alt=!0;break;default:dir.hotkey(a)}});$("body").on("click contextmenu",function(a){$("div.toast:visible").length?$("div.toast").hide():["div.ribbon",".contextmenu","#dir-select","#toast"].forEach(function(b){!$(b+":visible").length||$(b).has(a.target).length||
$(b).is(a.target)||dir.resetUI()})});$("form").submit(function(a){a.stopPropagation()});$("#check-all").change(function(a){$("#check-all").prop("checked")?($("#files tr input[type='checkbox']").prop("checked",!0),$("#files tr").addClass("selected")):($("#files tr input[type='checkbox']").prop("checked",!1),$("#files tr").removeClass("selected"))});$("#files").on("click keyup","input",function(a){"click"!=a.type&&32!=a.which||$(this).parents("tr").toggleClass("selected",this.checked)});$("#files").on("click",
"tr",function(a){$(a.target).is("a, input")||$(this).find("input").first().click()});$("#files").on("contextmenu","tr",function(a){dir.lastInteraction="files";this.className.includes("selected")||($("tr.file.selected input").prop("checked",!1),$("tr.file.selected").removeClass("selected"),$(this).click());dir.resetUI();$("#files-menu").hide().removeClass("ribbon").addClass("contextmenu");$("#files-menu").css({top:a.pageY,left:a.pageX}).show();return!1});$("#files").on("click keyup contextmenu",function(){dir.lastInteraction=
"files"});$("#subdirs").on("click","tr",function(){$(this).toggleClass("selected")});$("#subdirs").on("contextmenu","tr",function(a){dir.lastInteraction="subdirs";this.className.includes("selected")||($("tr.subdir.selected").removeClass("selected"),$(this).addClass("selected"));dir.resetUI();$("#subdirs-menu").hide().removeClass("ribbon").addClass("contextmenu");$("#subdirs-menu").css({top:a.pageY,left:a.pageX}).show();return!1});$("#subdirs").on("dblclick","tr",function(a){dir.refresh(dir.path+dir.separator+
$(this).text());a.preventDefault()});$("#subdirs").on("click contextmenu",function(a){dir.lastInteraction="subdirs"});$("#subdirs").mousedown(function(a){a.preventDefault()});$("#dir-select").on("click","tr",function(a){dir.selectDir($(this))});$("ul.ribbon").on("click","li",function(a){if(this.className.includes("selected"))$("ul.ribbon li.selected").removeClass("selected"),$("div.ribbon").hide();else{$("div.ribbon").hide();$(".contextmenu").hide();var b="#"+this.className+"-menu";$(b).removeClass("contextmenu").css({top:"",
left:""}).addClass("ribbon").show();$(b+" input").first().focus();$("ul.ribbon li.selected").removeClass("selected");$(this).addClass("selected")}a.stopPropagation();$(".toast").hide()});$("#upload-form").submit(function(a){for(var b=0,c=$jscomp.makeIterator($("#upload")[0].files),d=c.next();!d.done;d=c.next()){d=d.value;if(dir.isFile(d.name)){dir.error("File "+d.name+"already exists");a.preventDefault();return}b+=d.size}""!=dir.uploadPath?dir.error("Upload already in progress"):b>dir.maxUploadSize?
dir.error("Selected files exceed maximum upload size limit of "+dir.formatSize(dir.maxUploadSize)):$("#upload")[0].files.length>dir.maxUploadCount?dir.error("Server will not accept more than "+dir.maxUploadCount+" file"+(1<dir.maxUploadCount?"s":"")+" per upload"):0==$("#upload")[0].files.length?dir.error("No files selected for upload"):($("div.ribbon.upload").hide(),$("div.ribbon.upload-progress").show(),dir.upload(),$("#upload").val(""));a.preventDefault()});$("#addressbar").click(function(a){var b=
$(a.target);b.is($("span.path"))?($("span.path").hide(),$("input.path").show().focus().select(),a.stopPropagation()):b.is($("#go"))?(dir.resetUI(),dir.refresh($("input.path").val()),a.stopPropagation()):b.is($("#up"))?($("#subdirs-action").val("up"),$("#subdirs-form").submit(),a.stopPropagation()):b.parent().is($("span.path"))&&(dir.resetUI(),dir.refresh(dir.path.split(dir.separator).slice(0,b.index()+1).join(dir.separator)))});$("input.path").blur(function(a){$("input.path").val(dir.path).hide();
$("span.path").show()});$("input.path").keydown(function(a){13==a.which&&(dir.resetUI(),dir.refresh($("input.path").val()));27==a.which&&$("input.path").blur()});$("html").on("dragover",function(a){a.stopPropagation();a.preventDefault()});$("html").on("drop",function(a){a.stopPropagation();a.preventDefault();$("#upload")[0].files=a.originalEvent.dataTransfer.files;$("#upload-form").submit()});$(window).bind("popstate",function(a){dir.clearErrors();dir.poppingHistory=!0;dir.refresh(a.originalEvent.state.path)})});</script><style>/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}</style><style>.container{position:relative;width:100%;max-width:960px;margin:0 auto;padding:0 20px;box-sizing:border-box}.column,.columns{width:100%;float:left;box-sizing:border-box}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:"Raleway","HelveticaNeue","Helvetica Neue",Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2;letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25;letter-spacing:-.1rem}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=submit],input[type=reset],input[type=button]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:hover,button:hover,input[type=submit]:hover,input[type=reset]:hover,input[type=button]:hover,.button:focus,button:focus,input[type=submit]:focus,input[type=reset]:focus,input[type=button]:focus{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=submit].button-primary,input[type=reset].button-primary,input[type=button].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:hover,button.button-primary:hover,input[type=submit].button-primary:hover,input[type=reset].button-primary:hover,input[type=button].button-primary:hover,.button.button-primary:focus,button.button-primary:focus,input[type=submit].button-primary:focus,input[type=reset].button-primary:focus,input[type=button].button-primary:focus{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=search],input[type=text],input[type=tel],input[type=url],input[type=password],textarea,select{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=search],input[type=text],input[type=tel],input[type=url],input[type=password],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=search]:focus,input[type=text]:focus,input[type=tel]:focus,input[type=url]:focus,input[type=password]:focus,textarea:focus,select:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ul ul,ul ol,ol ol,ol ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}th,td{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}th:first-child,td:first-child{padding-left:0}th:last-child,td:last-child{padding-right:0}button,.button{margin-bottom:1rem}input,textarea,select,fieldset{margin-bottom:1.5rem}pre,blockquote,dl,figure,table,p,ul,ol,form{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:"";display:table;clear:both}</style><style>*{box-sizing:border-box}html,body{height:100%}body{text-align:center;font-family:"Roboto",sans-serif}table,input{margin-bottom:0}#header{top:0;left:0;position:fixed;width:100%;background:#e1e1e1;display:flex;align-items:center;height:3rem;z-index:10;color:#000;border-bottom:1px solid #d1d1d1}#subheader{position:fixed;top:3rem;background:#e1e1e1;height:3rem;width:100%;text-align:left;display:flex}#addressbar{margin:0 1rem;float:left;height:3rem;display:flex;flex-grow:1;height:3rem;align-items:center;cursor:default}span.nav:hover{color:#0fa0ce}#filter{float:right;position:relative;top:.5rem;margin:0 1rem;width:25rem;text-align:right;height:2rem}input.path{height:2rem;display:none}.path{margin-left:1rem;padding:0 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box;height:2rem;margin-right:.5rem;line-height:2rem;flex-grow:1}span.path>span{padding:0 .25rem}div.title{width:20%}div.menu{text-align:left;width:40%}div.logout{text-align:right;padding-right:1rem;width:40%}ul.ribbon{margin:0;margin-right:1rem;display:inline-flex;cursor:pointer}ul.ribbon>li:first-child{border-left:none}ul.ribbon>li{display:inline-block;padding:0 2rem;margin:0;font-size:small;line-height:3rem}ul.ribbon>li:hover{background:#d1d1d1}ul.ribbon>li.selected{background:#fff}div.ribbon{display:none;position:absolute;left:0;top:3rem;background:#fff;border-bottom:1px solid #a2a2a2;border-right:1px solid #a2a2a2;padding:1rem;z-index:15}#subdirs-menu,#files-menu{display:none}#login{display:none;padding:2rem}#manager{display:flex;position:relative;top:6rem;width:100%;height:calc(100% - 6rem);padding:1rem 0 1rem 2rem}div.scroll{overflow-x:hidden;overflow-y:auto;padding-right:17px}div.scroll.subdirs>div{width:20rem;text-align:left;cursor:default;padding-right:1rem}div.scroll.files{flex-grow:1}div.scroll.files>div{margin-left:1rem;padding-right:1rem;width:100%}table.files{width:100%}table.subdirs{text-align:left;width:100%;table-layout:fixed}tr.subdir{cursor:pointer}tr.subdir:hover{background:#f1f1f1}tr.subdir.selected{background:#e1e1e1}td.subdir{text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden}#error{border-color:red}.errors{color:red;font-weight:700}.toast{white-space:pre-line;position:absolute;top:7rem;left:50%;margin-left:-25rem;width:50rem;background:#fff;border:1px solid #000;z-index:30;padding:1rem;display:none;border-radius:5px}div.ribbon.regex-rename,div.ribbon.search{padding-left:.5rem}div.ribbon label{display:inline;margin-left:.5rem}input.files[type=checkbox]{margin:0;vertical-align:middle}#check-all{margin:0;vertical-align:middle}form{margin-bottom:0}#regex-rename-form input.confirm{display:none}tr.file:hover{background:#f1f1f1}tr.file.selected{background:#e1e1e1}td,th{padding:8px;vertical-align:middle}td:first-child,th:first-child{padding:8px}td.col-name{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.hidden{display:none}th.files{cursor:default}th.files.sort_asc:after{content:" \25B2"}th.files.sort_desc:after{content:" \25BC"}th.hide,td.hide{display:none}#edit-box{text-align:left;position:fixed;width:70%;left:50%;margin-left:-35%;top:3rem;padding:1.5rem;background:#fff;border:1px solid #000;border-top:none;display:none}#edit{width:100%;height:100%;resize:none}#edit-form{margin:0;text-align:right}#edit-form>input{margin:0}div.modal{z-index:10;text-align:left;position:fixed;top:7rem;left:50%;margin-left:-25rem;width:50rem;background:#fff;border:1px solid #000;padding:1rem;display:none;cursor:default}div.modal-list{max-height:50rem;overflow-y:auto;overflow-x:hidden;padding-left:1rem;padding-right:17px}div.modal-list table{width:calc(46rem - 17px);table-layout:fixed;margin-bottom:1rem}div.modal-list td{text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden}div.modal-buttons{text-align:center;padding-top:1rem}#search-form{display:inline}a{text-decoration:underline;cursor:pointer}a.jumpto{font-size:small}div.search-results th:last-child{width:7rem}#search-results td:last-child{text-align:right}.contextmenu{z-index:10;text-align:left;position:fixed;padding:.5rem;background:#fff;border:1px solid #000;display:none}.contextmenu label{display:block;padding-left:15px;text-indent:-15px;font-size:1rem;margin:0}.contextmenu input[type=checkbox]{width:13px;height:13px;padding:0;margin:0;vertical-align:bottom;position:relative;top:-1px;*overflow:hidden;}.contextmenu input[type=submit]{display:block;color:unset;text-transform:none;font-size:1rem;height:unset;line-height:unset;border:none;padding:0;margin:0}#progress-wrapper{display:flex;position:fixed;left:0;bottom:0}#progress-wrapper>div{background:#fff;display:none;border-top:1px solid #000;border-right:1px solid #000;z-index:15;padding:1rem}#progress-wrapper label{display:inline}div.progress{position:relative;display:inline-block;width:20rem;margin-left:1rem;background:#e1e1e1}div.progress-bar{width:0;position:absolute;top:0;height:100%;background:#33c3f0}span.progress-text{position:relative;z-index:10}</style><style>@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+1F00-1FFF}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0370-03FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+1F00-1FFF}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0370-03FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:500;src:local('Roboto Medium'),local('Roboto-Medium'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,d09GMgABAAAAAAXEABIAAAAAChQAAAVoAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGiYbcBw2BmAAWAhICYM8EQwKg0iDLwsQABIUATYCJAMcBCAFgn4HIAyCKRuzCAAeB9VtL8ZjmjBlkke/REDVTHsWxIc2y6mTiVkXQjA+g/RK1YbpR8jyT3b5M9kN4NmAiwg6YQ/aC1HmC00ZvLtP9nIFVek+mP/shT/cL/W991P/gVWC/zuwM4uuRRTIQM9oWRZJa2zwCQ2Ip26IxPaVfYyqpq96gH05QaQZ0B2WEwRBhAoqAgJKxmhAL1jUN4aSDliecaCkQ2ZEO0o6UjfnQkloeJ+sOOKgGRcKwDsSkRkXRLqipd4ypEAs7J3IVe+ejuOUMVlMlpCV0BwdJ7dH16WkV6WlUOgYL4lfdnAEZ+AcuQWLVw92ItLRb/f00+Dg/FURqsHXQzItzdQQFBjtgxIES8oZaDVMIPR0rPzPNv3oQQFUyBlB8Dtv/z/JGearWzSsog1j7XjWa87EQbo29hUTXa0W9xWcTBOTbNeaZrrmeooNt2nLPaE596EIMiOWQ+BQ3YPxjs4H8P+yBbt5itQ+e3MQ2Bppt7YB1o6EiM1CQV8OYrbWAVT2opGpTBk5XNuy9MDDZBGx6IxAZ49dwXOJh2WjCVhftxKwoc7AnM5kn3qQTFbDQbIUQycPdyJHbIswNpca/B2ZpezyteOcNVPDU7C1oApzFsgEhiHtcJsegNsLqow7NZE7p2tcXbcmnBjyyVyBRgurBNdbsEl7dG45zDQzGTjX+qtb+nc+dp7oejmgj01TE6jshTWztSYa3BqEk8X5OGtSltyt0cZBkV0+OtXeRoiMbKDEZv0WCpSx/9kq7J2Dw6W1LevrV5rQDnggAF264bsQ9Yu/OrYzGfrH5gG59IFWvPufNpvYbM69sEZe92Rqq0ahf3CBPQjCIgXRLlpAHjSjiFmQwzis9Nwt1YSjvFQSo9nWnCteP+6MllPPsNgCjtgz/PBwRPMZ5778qLTlk3c2hfPe/XT7x2/b/7znpS2vbbD1ennrm5vPUASrlw4ue33jhudvhCHPSLNn4oP2RL75tvMXnnxQPuXTG2O816VYFa9Z9+7+Ny+f33v//nurd1w9z6Mlb161qPfeker09/vGaB9v/v6Ky2/+xieLP7z596suv/E7nyzpefbqo6c/6fb5rD250V211eWVI+PdGcptVRXloBdBeen/jxCh0WPX6YnpmzIL6+AjVD1RwiwZgUhUWemlfbS1V3tTsHmmMAKlt3dVSLZpoygia347Zqw3Sa8ZJNmuL22AIXwFaUz2gJCIO7uGrFRYZ15WfwPQsurCMcUIykKWf9g5LwgQmuWILC2pVAgfjwRUivmEKJfk+fNG/du//Xj7Q/u0zPi90KsAnvmpbRRCvB7WvfHPmP9fL15SmIUVRSCQP7JRobjFxcbELoLGKh9vc6BPEBqkF9sUd1CkzzV6wMjbqbsBvgJoJhKN4yeg4GCUkBSxNzTXBhV7ayMFh2tj3c3IE21qkG1tTnd7l222wX3zSdyWzbAys5hDlChSfCuJTpIzJjmIxt1cDPhkMxYdiZHMyCzzF0WzRDMWiIx4IyR6kjmSFhIHI58gNTKR25xlhYjrHMiPl6pUe6rVlfk85znD5DluNYSWWXw7no6bjoGFiCeZYSZwsDIQucwSzRL06daq3YBR7bjdf6kIBew6nFFzxaxSmBnOG4Kj4S6F4iHpcWEKw++P2qaxJGqWiHmT5NQpe9ZkmqQL+/ZWpJrksjsSIoNN8i2TCtKiTAo1ozMSwmvFihEwKSmW1xQkGpV/P3/D8QtX8FaC88Mz795F3qLmcMJd0DqAIcWJd22Bu3XSXY1dJawBbYKgOPGuQZLoBO3Tf0j3ZNFJdJITqfCE1JTUc0ab4YMC6c4S1oBO0AP6D41OlITeOMtdRKHm5Ms1fAIA);unicode-range:U+1F00-1FFF}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0370-03FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:700;src:local('Roboto Bold'),local('Roboto-Bold'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+1F00-1FFF}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0370-03FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,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);unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Roboto';font-style:normal;font-weight:900;src:local('Roboto Black'),local('Roboto-Black'),url(data:application/x-font-woff;charset=utf-8;base64,);unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}</style></head><body><div
id="header"><div
class="menu"><ul
class="ribbon"><li
class="files">File</li><li
class="subdirs">Directory</li><li
class="search">Search</li></ul></div><div
class="title">PFM File Manager</div><div
class="logout"><a
id="logout" href="#">Logout</a></div></div><div
id="subheader"><div
id="addressbar">
<span
id="up" class="nav">&#129129;</span>
<span
class="path"></span>
<input
type="text" class="path">
<span
id="go" class="nav">&#129130;</span></div>
<input
type="text" id="filter" placeholder="Filter &#8981;"></div><div
id="subdirs-menu"><form
id="subdirs-form" class="ribbon">
<input
type="hidden" id="subdirs-action">
<input
type="submit" value="Go">
<input
type="submit" value="Up">
<input
type="submit" value="New">
<input
type="submit" value="Rename">
<input
type="submit" value="Copy">
<input
type="submit" value="Move">
<input
type="submit" value="Delete">
<input
type="submit" value="Kill">
<input
type="submit" value="Download">
<input
type="submit" value="Select All"></form></div><div
id="files-menu" class="ribbon"><form
id="files-form">
<input
type="hidden" id="files-action">
<input
type="submit" value="New">
<input
type="submit" value="Rename">
<input
type="submit" value="Regex Rename">
<input
type="submit" value="Move">
<input
type="submit" value="Copy">
<input
type="submit" value="Duplicate">
<input
type="submit" value="Delete">
<input
type="submit" value="Edit">
<input
type="submit" value="Upload">
<input
type="submit" value="Download"></form></div><div
class="ribbon regex-rename"><form
id="regex-rename-form">
<label
for="pattern">Pattern </label><input
type="text" id="pattern">
<label
for="replace">Replace </label><input
type="text" id="replace">
<input
type="submit" class="rename" value="Regex Rename">
<input
type="submit" class="confirm" value="Confirm">
<input
id="regex-rename-clear" class="confirm" type="button" value="Clear"></form></div><div
id="search-menu" class="ribbon search"><form
id="search-form">
<label
for="search-query">Query </label><input
type="text" id="search-query">
<label
for="search-regex">Regex </label><input
type="checkbox" id="search-regex" class="setting">
<label
for="search-depth">Depth </label><input
type="text" id="search-depth" class="setting" size="1" value="1">
<input
type="submit" value="Search"></form></div><div
class="ribbon upload"><form
id="upload-form">
<input
type="hidden" id="max-file-size" name="MAX_FILE_SIZE">
<input
type="file" id="upload" name="upload[]" multiple>
<input
type="submit" value="Upload"></form></div><div
id="login" class="container"><div
class="row"><div
class="twelve columns"><h1>File Manager</h1><div
id="login-errors" class="errors"></div><form
id="login-form">
<input
type="password" id="password">
<input
type="submit" value="Login"></form></div></div></div><div
id="error" class="toast errors"></div><div
id="toast" class="toast"></div><div
id="manager"><div
class="scroll subdirs"><div><table
class="subdirs"><thead><tr><th
class="subdir">
&#8203;</th></tr></thead><tbody
id="subdirs"></tbody></table></div></div><div
class="scroll files"><div><table
class="files"><thead
class="files"><tr><th
width="1"><input
type="checkbox" id="check-all"></th><th
id="file-name" class="files col-name">Name</th><th
id="file-size" class="files col-size">Size</th><th
id="file-owner" class="files col-owner">Owner</th><th
id="file-group" class="files col-group">Group</th><th
id="file-permissions" class="files col-permissions">Permissions</th><th
id="file-created" class="files col-created">Created</th><th
id="file-modified" class="files col-modified">Modified</th></tr></thead><tbody
id="files"></tbody></table></div></div></div><div
id="progress-wrapper"><div
id="ul-progress">
<label>Uploading... </label><div
class="progress"><span
id="ul-progress-text" class="progress-text">&nbsp;</span><div
id="ul-progress-bar" class="progress-bar">&nbsp;</div></div></div><div
id="dl-progress">
<label>Downloading... </label><div
class="progress"><span
id="dl-progress-text" class="progress-text">&nbsp;</span><div
id="dl-progress-bar" class="progress-bar">&nbsp;</div></div></div></div><div
class="modal dir-select"><div
class="modal-list"><table
summary="Directory selection"><thead><tr><th></th></tr></thead><tbody
id="dir-select"></tbody></table></div><div
class="modal-buttons">
<input
type="button" value="Select" id="dir-select-select"> <input
type="submit" value="Cancel" id="dir-select-cancel"></div></div><div
class="modal search-results"><div
class="modal-list"><table
summary="Search results"><thead><tr><th>Search Results</th><th></th></tr></thead><tbody
id="search-results"></tbody></table></div><div
id="search-results-buttons" class="modal-buttons">
<input
type="button" value="Close" id="search-results-close"></div></div><div
id="edit-box"><form
id="edit-form"><textarea id="edit" rows="20"></textarea><br>
<input
type="hidden" id="edit-action">
<input
type="submit" value="Save"> <input
type="submit" value="Save &amp; Close"> <input
type="submit" value="Close"></form></div><div
id="filecolumns-menu" class="contextmenu">
<label><input
type="checkbox" class="column-sel setting" id="chkbx-name" checked> Name</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-size" checked> Size</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-owner" checked> Owner</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-group" checked> Group</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-permissions" checked> Permissions</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-created" checked> Created</label>
<label><input
type="checkbox" class="column-sel setting" id="chkbx-modified" checked> Modified</label></div></body></html><?php } ?>